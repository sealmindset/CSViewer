{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/RowPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./RowPopup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowPopup = ({\n  headers,\n  data: rowData,\n  renamedHeaders,\n  hiddenColumns,\n  onClose\n}) => {\n  _s();\n  const visibleHeaders = headers.filter(header => !hiddenColumns.includes(header));\n  const textMeasureRef = useRef(null);\n  const [charWidth, setCharWidth] = useState(0);\n  useEffect(() => {\n    // Calculate the width of 100 characters\n    if (textMeasureRef.current) {\n      const textWidth = textMeasureRef.current.offsetWidth;\n      setCharWidth(textWidth / 100);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row-popup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-btn\",\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: visibleHeaders.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"header-cell\",\n              children: renamedHeaders[header] || header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"data-cell\",\n              children: rowData && rowData[header]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, header, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: textMeasureRef,\n      id: \"text-measure\",\n      style: {\n        visibility: \"hidden\"\n      },\n      children: \"x\".repeat(100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(RowPopup, \"SM4MQp0b6LNqyNsrVqOnmoxfQUA=\");\n_c = RowPopup;\nexport default RowPopup;\nvar _c;\n$RefreshReg$(_c, \"RowPopup\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","RowPopup","headers","data","rowData","renamedHeaders","hiddenColumns","onClose","_s","visibleHeaders","filter","header","includes","textMeasureRef","charWidth","setCharWidth","current","textWidth","offsetWidth","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","id","style","visibility","repeat","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/RowPopup.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./RowPopup.css\";\n\nconst RowPopup = ({ headers, data: rowData, renamedHeaders, hiddenColumns, onClose }) => {\n  const visibleHeaders = headers.filter((header) => !hiddenColumns.includes(header));\n  const textMeasureRef = useRef(null);\n  const [charWidth, setCharWidth] = useState(0);\n\n  useEffect(() => {\n    // Calculate the width of 100 characters\n    if (textMeasureRef.current) {\n      const textWidth = textMeasureRef.current.offsetWidth;\n      setCharWidth(textWidth / 100);\n    }\n  }, []);\n\n  return (\n    <div className=\"row-popup-container\">\n        <button className=\"close-btn\" onClick={onClose}>\n            Close\n        </button>\n        <div className=\"table-container\">\n            <table>\n                <tbody>\n                    {visibleHeaders.map((header) => (\n                        <tr key={header}>\n                            <th className=\"header-cell\">\n                                {renamedHeaders[header] || header}\n                            </th>\n                            <td className=\"data-cell\">\n                                {rowData && rowData[header]}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n        <div ref={textMeasureRef} id=\"text-measure\" style={{ visibility: \"hidden\" }}>\n            {\"x\".repeat(100)}\n        </div>\n    </div>\n  );\n};\n\nexport default RowPopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI,EAAEC,OAAO;EAAEC,cAAc;EAAEC,aAAa;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvF,MAAMC,cAAc,GAAGP,OAAO,CAACQ,MAAM,CAAEC,MAAM,IAAK,CAACL,aAAa,CAACM,QAAQ,CAACD,MAAM,CAAC,CAAC;EAClF,MAAME,cAAc,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAE7CF,SAAS,CAAC,MAAM;IACd;IACA,IAAIiB,cAAc,CAACG,OAAO,EAAE;MAC1B,MAAMC,SAAS,GAAGJ,cAAc,CAACG,OAAO,CAACE,WAAW;MACpDH,YAAY,CAACE,SAAS,GAAG,GAAG,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCpB,OAAA;MAAQmB,SAAS,EAAC,WAAW;MAACE,OAAO,EAAEd,OAAQ;MAAAa,QAAA,EAAC;IAEhD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5BpB,OAAA;QAAAoB,QAAA,eACIpB,OAAA;UAAAoB,QAAA,EACKX,cAAc,CAACiB,GAAG,CAAEf,MAAM,iBACvBX,OAAA;YAAAoB,QAAA,gBACIpB,OAAA;cAAImB,SAAS,EAAC,aAAa;cAAAC,QAAA,EACtBf,cAAc,CAACM,MAAM,CAAC,IAAIA;YAAM;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACLzB,OAAA;cAAImB,SAAS,EAAC,WAAW;cAAAC,QAAA,EACpBhB,OAAO,IAAIA,OAAO,CAACO,MAAM;YAAC;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA,GANAd,MAAM;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOX,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNzB,OAAA;MAAK2B,GAAG,EAAEd,cAAe;MAACe,EAAE,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAV,QAAA,EACvE,GAAG,CAACW,MAAM,CAAC,GAAG;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvCIP,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}