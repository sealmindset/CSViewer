{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: {\n        ...renamedHeaders\n      },\n      hiddenColumns: [...hiddenColumns],\n      // Clone hiddenColumns as an empty array\n      filterCriteria: {\n        ...filterCriteria\n      },\n      searchTerms: {\n        ...searchTerms\n      }\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n  useEffect(() => {\n    const filteredData = data.filter(row => headers.every(header => {\n      const criteria = filterCriteria[header];\n      const searchTerm = searchTerms[header];\n      return (!criteria || criteria === \"All\" || row[header] === criteria) && (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()));\n    }));\n\n    // Apply group by and sort logic\n    const groupedAndSortedData = groupAndSortTableData(filteredData);\n    setGroupedData(groupedAndSortedData);\n  }, [data, headers, filterCriteria, searchTerms]);\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse as before\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: result => {\n            setData(result.data);\n            setHeaders(result.meta.fields);\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          }\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly\n        const jsonData = JSON.parse(fileContent);\n        // Check if the JSON data is an array or a single object\n        if (Array.isArray(jsonData)) {\n          setData(jsonData);\n          setHeaders(Object.keys(jsonData[0]));\n        } else if (typeof jsonData === \"object\") {\n          setData([jsonData]); // Wrap the single object in an array\n          setHeaders(Object.keys(jsonData));\n        } else {\n          alert(\"Invalid JSON data format. Please upload a valid JSON file.\");\n        }\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    // Allow both CSV and JSON files\n    multiple: false\n  });\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  // ... (remaining existing code)\n\n  // Utility function to convert JSON data to CSV format\n  const convertJSONToCSV = jsonData => {\n    let csvContent = \"\";\n    if (Array.isArray(jsonData)) {\n      // Handle array of objects\n      const headerRow = Object.keys(jsonData[0]);\n      const dataRows = jsonData.map(row => {\n        return headerRow.map(header => {\n          const value = typeof row[header] === \"object\" ? JSON.stringify(row[header]) : row[header];\n          return value;\n        });\n      });\n      csvContent += headerRow.join(\",\") + \"\\n\";\n      dataRows.forEach(dataRow => {\n        csvContent += dataRow.join(\",\") + \"\\n\";\n      });\n    } else if (typeof jsonData === \"object\") {\n      // Handle single object\n      const headerRow = Object.keys(jsonData);\n      const dataRow = headerRow.map(header => {\n        const value = typeof jsonData[header] === \"object\" ? JSON.stringify(jsonData[header]) : jsonData[header];\n        return value;\n      });\n      csvContent += headerRow.join(\",\") + \"\\n\";\n      csvContent += dataRow.join(\",\") + \"\\n\";\n    }\n    return csvContent;\n  };\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupedData.map(row => headers.reduce((acc, header) => {\n      if (!hiddenColumns.includes(header)) {\n        const newColumn = renamedHeaders[header] || header;\n        acc[newColumn] = row[header];\n      }\n      return acc;\n    }, {}));\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = convertJSONToCSV(visibleData); // Convert the data to CSV format\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n    const blob = new Blob([dataToExport], {\n      type: `text/${fileExtension};charset=utf-8;`\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CSV | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV | JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        const newColumn = renamedHeaders[header] || header;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [newColumn]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value.slice(-100)\n                        }));\n                      },\n                      list: `datalist-${header}`,\n                      maxLength: 98,\n                      size: 95\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          data: groupedData,\n          columns: columns,\n          striped: true,\n          highlightOnHover: true,\n          dense: true,\n          defaultSortField: groupByColumn,\n          defaultSortAsc: true,\n          onRowClicked: handleRowClick,\n          noHeader: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"export-button\",\n        onClick: () => promptFileName(\"csv\"),\n        children: \"Export as CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"export-button\",\n        onClick: () => promptFileName(\"json\"),\n        children: \"Export as JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Row Details\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(RowPopup, {\n        rowData: selectedRowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      contentLabel: \"Enter File Name\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a file name for the exported file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fileName,\n          onChange: e => setFileName(e.target.value),\n          maxLength: 100,\n          style: {\n            width: \"98%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileNameSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KythACIW96uSFfef10K81xqT8do=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","initialState","setInitialState","groupByColumns","setGroupByColumns","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","groupedData","setGroupedData","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","filteredData","every","criteria","groupedAndSortedData","groupAndSortTableData","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parse","skipEmptyLines","complete","meta","fields","jsonData","JSON","isArray","Object","keys","alert","readAsText","getRootProps","getInputProps","onDrop","accept","multiple","handleRowClick","convertJSONToCSV","csvContent","headerRow","dataRows","stringify","join","dataRow","handleDownload","format","fileName","visibleData","reduce","acc","dataToExport","fileExtension","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","checked","onChange","e","handleColumnToggle","prevRenamedHeaders","maxLength","width","handleGroupByToggle","_dropdownOptions$head","Fragment","placeholder","prevSearchTerms","slice","list","size","id","whiteSpace","overflow","textOverflow","length","onClick","handleReset","columns","striped","highlightOnHover","dense","defaultSortField","groupByColumn","defaultSortAsc","onRowClicked","noHeader","promptFileName","isOpen","onRequestClose","contentLabel","rowData","isFileNameModalOpen","setIsFileNameModalOpen","setFileName","handleFileNameSubmit","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: { ...renamedHeaders },\n      hiddenColumns: [...hiddenColumns], // Clone hiddenColumns as an empty array\n      filterCriteria: { ...filterCriteria },\n      searchTerms: { ...searchTerms },\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  useEffect(() => {\n    const filteredData = data.filter((row) =>\n      headers.every((header) => {\n        const criteria = filterCriteria[header];\n        const searchTerm = searchTerms[header];\n        return (\n          (!criteria || criteria === \"All\" || row[header] === criteria) &&\n          (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()))\n        );\n      })\n    );\n\n    // Apply group by and sort logic\n    const groupedAndSortedData = groupAndSortTableData(filteredData);\n    setGroupedData(groupedAndSortedData);\n  }, [data, headers, filterCriteria, searchTerms]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse as before\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            setData(result.data);\n            setHeaders(result.meta.fields);\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          },\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly\n        const jsonData = JSON.parse(fileContent);\n        // Check if the JSON data is an array or a single object\n        if (Array.isArray(jsonData)) {\n          setData(jsonData);\n          setHeaders(Object.keys(jsonData[0]));\n        } else if (typeof jsonData === \"object\") {\n          setData([jsonData]); // Wrap the single object in an array\n          setHeaders(Object.keys(jsonData));\n        } else {\n          alert(\"Invalid JSON data format. Please upload a valid JSON file.\");\n        }\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\", // Allow both CSV and JSON files\n    multiple: false,\n  });\n\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  // ... (remaining existing code)\n\n  // Utility function to convert JSON data to CSV format\n  const convertJSONToCSV = (jsonData) => {\n    let csvContent = \"\";\n    if (Array.isArray(jsonData)) {\n      // Handle array of objects\n      const headerRow = Object.keys(jsonData[0]);\n      const dataRows = jsonData.map((row) => {\n        return headerRow.map((header) => {\n          const value = typeof row[header] === \"object\" ? JSON.stringify(row[header]) : row[header];\n          return value;\n        });\n      });\n\n      csvContent += headerRow.join(\",\") + \"\\n\";\n      dataRows.forEach((dataRow) => {\n        csvContent += dataRow.join(\",\") + \"\\n\";\n      });\n    } else if (typeof jsonData === \"object\") {\n      // Handle single object\n      const headerRow = Object.keys(jsonData);\n      const dataRow = headerRow.map((header) => {\n        const value = typeof jsonData[header] === \"object\" ? JSON.stringify(jsonData[header]) : jsonData[header];\n        return value;\n      });\n\n      csvContent += headerRow.join(\",\") + \"\\n\";\n      csvContent += dataRow.join(\",\") + \"\\n\";\n    }\n    return csvContent;\n  };\n\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupedData.map((row) =>\n      headers.reduce((acc, header) => {\n        if (!hiddenColumns.includes(header)) {\n          const newColumn = renamedHeaders[header] || header;\n          acc[newColumn] = row[header];\n        }\n        return acc;\n      }, {})\n    );\n\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = convertJSONToCSV(visibleData); // Convert the data to CSV format\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n\n    const blob = new Blob([dataToExport], { type: `text/${fileExtension};charset=utf-8;` });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CSV Table Display */}\n      <div className=\"section section1\">\n        <h1>CSV | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CSV File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV | JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }}\n                    />\n                  </td>\n                  <td>\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section filter-section\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Search ${renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            const newColumn = renamedHeaders[header] || header;\n                            setFilterCriteria((prevCriteria) => ({\n                              ...prevCriteria,\n                              [newColumn]: value,\n                            }));\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: value.slice(-100),\n                            }));\n                          }}\n                          list={`datalist-${header}`}\n                          maxLength={98}\n                          size={95}\n                        />\n                        <datalist id={`datalist-${header}`}>\n                          <option value=\"All\" />\n                          {dropdownOptions[header]?.map((value) => (\n                            <option\n                              key={value}\n                              value={value}\n                              style={{\n                                width: \"100%\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                              }}\n                            >\n                              {value.length > 100 ? `...${value.slice(-100)}` : value}\n                            </option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n\n      {/* Section 5: Display CSV Data */}\n      <div className=\"section section5\">\n        <div className=\"table-container\">\n          <DataTable\n            data={groupedData}\n            columns={columns}\n            striped={true}\n            highlightOnHover={true}\n            dense={true}\n            defaultSortField={groupByColumn}\n            defaultSortAsc={true}\n            onRowClicked={handleRowClick}\n            noHeader={true}\n          />\n        </div>\n      </div>\n\n      {/* Section 6: Footer */}\n      <div className=\"section section6\">\n        <button className=\"reset-button\" onClick={handleReset}>\n          Reset\n        </button>\n        <button className=\"export-button\" onClick={() => promptFileName(\"csv\")}>\n          Export as CSV\n        </button>\n        <button className=\"export-button\" onClick={() => promptFileName(\"json\")}>\n          Export as JSON\n        </button>\n      </div>\n\n      {/* Popup Modal */}\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Row Details\"\n        className=\"modal\"\n      >\n        <RowPopup rowData={selectedRowData} />\n      </Modal>\n\n      {/* Filename Input Modal */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        contentLabel=\"Enter File Name\"\n        className=\"modal\"\n      >\n        <div>\n          <p>Enter a file name for the exported file:</p>\n          <input\n            type=\"text\"\n            value={fileName}\n            onChange={(e) => setFileName(e.target.value)}\n            maxLength={100}\n            style={{ width: \"98%\" }}\n          />\n          <button onClick={handleFileNameSubmit}>Submit</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}