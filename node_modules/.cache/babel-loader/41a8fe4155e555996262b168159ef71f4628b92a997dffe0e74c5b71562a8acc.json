{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenProperties, mergeRow } from './JSONFlatten';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // First useEffect for updating filter criteria\n  useEffect(() => {\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  // Second useEffect for updating dropdown options\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  // Third useEffect for setting initial state\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: {\n        ...renamedHeaders\n      },\n      hiddenColumns: [...hiddenColumns],\n      // Clone hiddenColumns as an array\n      filterCriteria: {\n        ...filterCriteria\n      },\n      searchTerms: {\n        ...searchTerms\n      }\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  // Function to group and sort table data\n  const groupAndSortTableData = useCallback(tableData => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n    const groups = {};\n    tableData.forEach(row => {\n      const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    // Sort the data based on the groupBy column and any additional sorting criteria\n    return Object.values(groups).flat().sort((a, b) => {\n      // Sort based on the first selected groupBy column\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n  }, [groupByColumns, hiddenColumns]);\n\n  // Function to handle file drop\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: result => {\n            const processedData = result.data.map(row => {\n              if (row.PROPERTIES) {\n                const flattenedProperties = flattenProperties(row.PROPERTIES);\n                return mergeRow(flattenedProperties, row);\n              }\n              return row;\n            });\n            let maxKeys = 0;\n            let modelRow = null;\n            processedData.forEach(row => {\n              if (row.PROPERTIES) {\n                const flattenedProperties = flattenProperties(row.PROPERTIES);\n                const firstKey = Object.keys(flattenedProperties)[0];\n                if (firstKey !== 'lenses') {\n                  const nonEmptyKeys = Object.keys(flattenedProperties).filter(key => flattenedProperties[key]);\n                  const keysCount = nonEmptyKeys.length;\n                  if (keysCount > maxKeys) {\n                    maxKeys = keysCount;\n                    modelRow = flattenedProperties;\n                  }\n                }\n              }\n            });\n            if (modelRow) {\n              const nonEmptyHeaders = Object.keys(modelRow).filter(key => modelRow[key]);\n              const newHeaders = [...nonEmptyHeaders, ...headers];\n              setHeaders(newHeaders);\n            } else {\n              if (Array.isArray(processedData) && processedData.length > 0 && typeof processedData[0] === 'object') {\n                setHeaders(Object.keys(processedData[0]));\n              }\n            }\n            setData(processedData);\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          }\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        const jsonData = JSON.parse(fileContent);\n        if (Array.isArray(jsonData) && jsonData.length > 0 && typeof jsonData[0] === 'object') {\n          setHeaders(Object.keys(jsonData[0]));\n        }\n        setData(jsonData);\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, [headers]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    // Allow both CSV and JSON files\n    multiple: false\n  });\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n  const columns = updatedHeaders.map(header => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: row => {\n      const value = row && row[header]; // Add a check for 'row'\n      return value;\n    },\n    omit: header === groupByColumn || hiddenColumns.includes(header),\n    grow: 1\n  }));\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => {\n      if (isChecked) {\n        // If column is checked, remove it from hiddenColumns array\n        return prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column);\n      } else {\n        // If column is unchecked, add it to hiddenColumns array\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders(prevRenamedHeaders => {\n      const updatedHeaders = {\n        ...prevRenamedHeaders\n      };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => ({\n      ...prevGroupByColumns,\n      [column]: isChecked\n    }));\n  };\n\n  // Define missing functions\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const promptFileName = format => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupAndSortTableData(data).map(row => headers.reduce((acc, header) => {\n      if (!hiddenColumns.includes(header)) {\n        const newColumn = renamedHeaders[header] || header;\n        acc[newColumn] = row[header];\n      }\n      return acc;\n    }, {}));\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, {\n        header: true\n      });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n    const blob = new Blob([dataToExport], {\n      type: `text/${fileExtension};charset=utf-8;`\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  const filteredData = useCallback(() => {\n    return data.filter(row => {\n      for (const header of headers) {\n        // Check if there's a search term for this header and if the row doesn't match the search term\n        if (searchTerms[header] && !String(row[header]).toLowerCase().includes(searchTerms[header].toLowerCase())) {\n          return false;\n        }\n        // Check if there's a filter criteria for this header and if the row doesn't match the filter criteria\n        if (filterCriteria[header] && row[header] !== filterCriteria[header]) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }, [data, headers, searchTerms, filterCriteria]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CVS | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV|JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Array.isArray(headers) && headers.map(header => {\n              const truncatedHeaderValue = (renamedHeaders[header] || header).substring(0, 100);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !hiddenColumns.includes(header),\n                    onChange: e => handleColumnToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"field-name-cell\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"rename-input\",\n                    value: truncatedHeaderValue,\n                    onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                      ...prevRenamedHeaders,\n                      [header]: e.target.value\n                    })),\n                    maxLength: 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"checkbox\",\n                      checked: groupByColumns[header],\n                      onChange: e => handleGroupByToggle(e, header)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)]\n              }, header, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: e.target.value\n                        }));\n                      },\n                      maxLength: 100,\n                      style: {\n                        width: \"98%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: filterCriteria[header] || \"\",\n                      onChange: e => {\n                        setFilterCriteria(prevFilterCriteria => ({\n                          ...prevFilterCriteria,\n                          [header]: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(option => {\n                        if (!option) return null; // Add this line to handle undefined or null options\n                        const truncatedOption = option.length > 100 ? option.substring(0, 100) + \"...\" : option;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: option,\n                          children: truncatedOption\n                        }, option, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 35\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-section\",\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        title: \"CSV|JSON Data\",\n        columns: columns,\n        data: groupAndSortTableData(filteredData()),\n        pagination: true,\n        highlightOnHover: true,\n        pointerOnHover: true,\n        onRowClicked: handleRowClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => promptFileName(\"csv\"),\n        children: \"Download as CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => promptFileName(\"json\"),\n        children: \"Download as JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(RowPopup, {\n        data: selectedRowData,\n        headers: headers,\n        renamedHeaders: renamedHeaders,\n        hiddenColumns: hiddenColumns,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-name-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter File Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fileName,\n          onChange: e => setFileName(e.target.value),\n          placeholder: \"Enter file name without extension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-name-modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFileNameSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsFileNameModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QS4Ko0zOGDeDqjL6cwymISMYazw=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","flattenProperties","mergeRow","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","initialState","setInitialState","groupByColumns","setGroupByColumns","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","groupAndSortTableData","tableData","Object","keys","length","groups","groupKey","entries","column","selected","join","push","values","flat","sort","a","b","sortByColumn","find","sortBy","aValue","bValue","localeCompare","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parse","skipEmptyLines","complete","processedData","PROPERTIES","flattenedProperties","maxKeys","modelRow","firstKey","nonEmptyKeys","key","keysCount","nonEmptyHeaders","newHeaders","isArray","jsonData","JSON","alert","readAsText","getRootProps","getInputProps","onDrop","accept","multiple","groupByColumn","updatedHeaders","slice","columns","selector","sortable","wrap","format","omit","grow","handleRowClick","handleColumnToggle","isChecked","checked","prevHiddenColumns","hiddenColumn","prevRenamedHeaders","handleGroupByToggle","prevGroupByColumns","handleReset","isFileNameModalOpen","setIsFileNameModalOpen","selectedFileFormat","setSelectedFileFormat","fileName","setFileName","promptFileName","handleFileNameSubmit","trim","handleDownload","visibleData","reduce","acc","dataToExport","fileExtension","unparse","stringify","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","filteredData","String","className","children","_jsxFileName","lineNumber","columnNumber","truncatedHeaderValue","substring","onChange","e","maxLength","_dropdownOptions$head","Fragment","placeholder","prevSearchTerms","width","prevFilterCriteria","option","truncatedOption","title","pagination","highlightOnHover","pointerOnHover","onRowClicked","onClick","isOpen","onRequestClose","onClose","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenProperties, mergeRow } from './JSONFlatten';\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // First useEffect for updating filter criteria\n  useEffect(() => {\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  // Second useEffect for updating dropdown options\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  // Third useEffect for setting initial state\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: { ...renamedHeaders },\n      hiddenColumns: [...hiddenColumns], // Clone hiddenColumns as an array\n      filterCriteria: { ...filterCriteria },\n      searchTerms: { ...searchTerms },\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  // Function to group and sort table data\n  const groupAndSortTableData = useCallback((tableData) => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n\n    const groups = {};\n    tableData.forEach((row) => {\n      const groupKey = Object.entries(groupByColumns)\n        .map(([column, selected]) => (selected ? row[column] : \"\"))\n        .join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    // Sort the data based on the groupBy column and any additional sorting criteria\n    return Object.values(groups).flat().sort((a, b) => {\n      // Sort based on the first selected groupBy column\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n  }, [groupByColumns, hiddenColumns]);\n\n  // Function to handle file drop\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n  \n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n  \n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            const processedData = result.data.map(row => {\n              if (row.PROPERTIES) {\n                const flattenedProperties = flattenProperties(row.PROPERTIES);\n                return mergeRow(flattenedProperties, row);\n              }\n              return row;\n            });\n  \n            let maxKeys = 0;\n            let modelRow = null;\n  \n            processedData.forEach(row => {\n              if (row.PROPERTIES) {\n                const flattenedProperties = flattenProperties(row.PROPERTIES);\n                const firstKey = Object.keys(flattenedProperties)[0];\n  \n                if (firstKey !== 'lenses') {\n                  const nonEmptyKeys = Object.keys(flattenedProperties).filter(key => flattenedProperties[key]);\n                  const keysCount = nonEmptyKeys.length;\n                  if (keysCount > maxKeys) {\n                    maxKeys = keysCount;\n                    modelRow = flattenedProperties;\n                  }\n                }\n              }\n            });\n  \n            if (modelRow) {\n              const nonEmptyHeaders = Object.keys(modelRow).filter(key => modelRow[key]);\n              const newHeaders = [...nonEmptyHeaders, ...headers];\n              setHeaders(newHeaders);\n            } else {\n              if (Array.isArray(processedData) && processedData.length > 0 && typeof processedData[0] === 'object') {\n                setHeaders(Object.keys(processedData[0]));\n              }\n            }\n\n            setData(processedData);\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          },\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        const jsonData = JSON.parse(fileContent);\n\n        if (Array.isArray(jsonData) && jsonData.length > 0 && typeof jsonData[0] === 'object') {\n          setHeaders(Object.keys(jsonData[0]));\n        }\n\n        setData(jsonData);\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, [headers]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\", // Allow both CSV and JSON files\n    multiple: false,\n  });\n\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n\n  const columns = updatedHeaders.map((header) => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: (row) => {\n      const value = row && row[header]; // Add a check for 'row'\n      return value;\n    },\n    omit: header === groupByColumn || hiddenColumns.includes(header),\n    grow: 1,\n  }));\n\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) => {\n      if (isChecked) {\n        // If column is checked, remove it from hiddenColumns array\n        return prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column);\n      } else {\n        // If column is unchecked, add it to hiddenColumns array\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders((prevRenamedHeaders) => {\n      const updatedHeaders = { ...prevRenamedHeaders };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => ({\n      ...prevGroupByColumns,\n      [column]: isChecked,\n    }));\n  };\n\n  // Define missing functions\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const promptFileName = (format) => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupAndSortTableData(data).map((row) =>\n      headers.reduce((acc, header) => {\n        if (!hiddenColumns.includes(header)) {\n          const newColumn = renamedHeaders[header] || header;\n          acc[newColumn] = row[header];\n        }\n        return acc;\n      }, {})\n    );\n  \n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, { header: true });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n  \n    const blob = new Blob([dataToExport], { type: `text/${fileExtension};charset=utf-8;` });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const filteredData = useCallback(() => {\n    return data.filter(row => {\n      for (const header of headers) {\n        // Check if there's a search term for this header and if the row doesn't match the search term\n        if (searchTerms[header] && !String(row[header]).toLowerCase().includes(searchTerms[header].toLowerCase())) {\n          return false;\n        }\n        // Check if there's a filter criteria for this header and if the row doesn't match the filter criteria\n        if (filterCriteria[header] && row[header] !== filterCriteria[header]) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }, [data, headers, searchTerms, filterCriteria]);\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CVS Table Display */}\n      <div className=\"header\">\n        <h1>CVS | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CVS File Input */}\n      <div className=\"upload\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV|JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n       {/* Section 3: Toggle Section */}\n       <div className=\"toggle\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {Array.isArray(headers) && headers.map((header) => {\n                const truncatedHeaderValue = (renamedHeaders[header] || header).substring(0, 100);\n                return (\n                  <tr key={header}>\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        checked={!hiddenColumns.includes(header)}\n                        onChange={(e) => handleColumnToggle(e, header)}\n                      />\n                    </td>\n                    <td className=\"field-name-cell\">\n                      <input\n                        type=\"text\"\n                        className=\"rename-input\"\n                        value={truncatedHeaderValue}\n                        onChange={(e) =>\n                          setRenamedHeaders((prevRenamedHeaders) => ({\n                            ...prevRenamedHeaders,\n                            [header]: e.target.value,\n                          }))\n                        }\n                        maxLength={100}\n                      />\n                    </td>\n                    <td>\n                      <label>\n                        Group By:\n                        <input\n                          type=\"checkbox\"\n                          checked={groupByColumns[header]}\n                          onChange={(e) => handleGroupByToggle(e, header)}\n                        />\n                      </label>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"filter\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Search ${renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: e.target.value,\n                            }));\n                          }}\n                          maxLength={100}\n                          style={{ width: \"98%\" }}\n                        />\n                      </td>\n                      <td>\n                        <select\n                          value={filterCriteria[header] || \"\"}\n                          onChange={(e) => {\n                            setFilterCriteria((prevFilterCriteria) => ({\n                              ...prevFilterCriteria,\n                              [header]: e.target.value,\n                            }));\n                          }}\n                        >\n                          <option value=\"\">All</option>\n                          {dropdownOptions[header]?.map((option) => {\n                              if (!option) return null;  // Add this line to handle undefined or null options\n                              const truncatedOption = option.length > 100 ? option.substring(0, 100) + \"...\" : option;\n                              return (\n                                  <option key={option} value={option}>\n                                      {truncatedOption}\n                                  </option>\n                              );\n                          })}\n\n                        </select>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 5: Table Section */}\n      <div className=\"table-section\">\n        <DataTable\n          title=\"CSV|JSON Data\"\n          columns={columns}\n          data={groupAndSortTableData(filteredData())}\n          pagination\n          highlightOnHover\n          pointerOnHover\n          onRowClicked={handleRowClick}\n        />\n      </div>\n\n      {/* Section 6: Reset and Download Section */}\n      <div className=\"download\">\n        <button onClick={handleReset}>Reset</button>\n        <button onClick={() => promptFileName(\"csv\")}>Download as CSV</button>\n        <button onClick={() => promptFileName(\"json\")}>Download as JSON</button>\n      </div>\n\n      {/* Section 7: Modal Section */}\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\n        <RowPopup \n            data={selectedRowData} \n            headers={headers}\n            renamedHeaders={renamedHeaders}\n            hiddenColumns={hiddenColumns}\n            onClose={() => setIsModalOpen(false)} \n        />\n\n      </Modal>\n\n      {/* Section 8: File Name Modal */}\n      <Modal isOpen={isFileNameModalOpen} onRequestClose={() => setIsFileNameModalOpen(false)}>\n        <div className=\"file-name-modal\">\n          <h2>Enter File Name</h2>\n          <input\n            type=\"text\"\n            value={fileName}\n            onChange={(e) => setFileName(e.target.value)}\n            placeholder=\"Enter file name without extension\"\n          />\n          <div className=\"file-name-modal-buttons\">\n            <button onClick={handleFileNameSubmit}>Submit</button>\n            <button onClick={() => setIsFileNameModalOpen(false)}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}