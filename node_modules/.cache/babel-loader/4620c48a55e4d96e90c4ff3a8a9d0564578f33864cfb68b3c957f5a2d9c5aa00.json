{"ast":null,"code":"// utils.js\n\nexport const flattenData = (data, columns) => {\n  // Function to flatten the data based on selected columns\n  const newData = data.map(row => {\n    const flattenedRow = {};\n    columns.forEach(column => {\n      if (row[column] && typeof row[column] === \"object\") {\n        Object.keys(row[column]).forEach(key => {\n          flattenedRow[`${column}.${key}`] = row[column][key];\n        });\n      } else {\n        flattenedRow[column] = row[column];\n      }\n    });\n    return flattenedRow;\n  });\n  return newData;\n};\nconst flattenObject = (obj, parentKey = \"\") => {\n  return Object.keys(obj).reduce((acc, key) => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n    const value = obj[key];\n    if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n      const flattened = flattenObject(value, newKey);\n      Object.assign(acc, flattened);\n    } else {\n      acc[newKey] = value;\n    }\n    return acc;\n  }, {});\n};\nexport const flattenJSONColumns = (data, columns) => {\n  const newData = data.map(row => {\n    const flattenedRow = {\n      ...row\n    };\n    columns.forEach(column => {\n      if (flattenedRow[column] && typeof flattenedRow[column] === \"object\") {\n        const flattenedObject = flattenObject(flattenedRow[column]);\n        delete flattenedRow[column];\n        Object.assign(flattenedRow, flattenedObject);\n      }\n    });\n    return flattenedRow;\n  });\n  return newData;\n};","map":{"version":3,"names":["flattenData","data","columns","newData","map","row","flattenedRow","forEach","column","Object","keys","key","flattenObject","obj","parentKey","reduce","acc","newKey","value","Array","isArray","flattened","assign","flattenJSONColumns","flattenedObject"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/utils.js"],"sourcesContent":["// utils.js\n\nexport const flattenData = (data, columns) => {\n  // Function to flatten the data based on selected columns\n  const newData = data.map((row) => {\n    const flattenedRow = {};\n    columns.forEach((column) => {\n      if (row[column] && typeof row[column] === \"object\") {\n        Object.keys(row[column]).forEach((key) => {\n          flattenedRow[`${column}.${key}`] = row[column][key];\n        });\n      } else {\n        flattenedRow[column] = row[column];\n      }\n    });\n    return flattenedRow;\n  });\n  return newData;\n};\n\nconst flattenObject = (obj, parentKey = \"\") => {\n  return Object.keys(obj).reduce((acc, key) => {\n    const newKey = parentKey ? `${parentKey}.${key}` : key;\n    const value = obj[key];\n\n    if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n      const flattened = flattenObject(value, newKey);\n      Object.assign(acc, flattened);\n    } else {\n      acc[newKey] = value;\n    }\n\n    return acc;\n  }, {});\n};\n\nexport const flattenJSONColumns = (data, columns) => {\n  const newData = data.map((row) => {\n    const flattenedRow = { ...row };\n    columns.forEach((column) => {\n      if (flattenedRow[column] && typeof flattenedRow[column] === \"object\") {\n        const flattenedObject = flattenObject(flattenedRow[column]);\n        delete flattenedRow[column];\n        Object.assign(flattenedRow, flattenedObject);\n      }\n    });\n    return flattenedRow;\n  });\n\n  return newData;\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,WAAW,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;EAC5C;EACA,MAAMC,OAAO,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAK;IAChC,MAAMC,YAAY,GAAG,CAAC,CAAC;IACvBJ,OAAO,CAACK,OAAO,CAAEC,MAAM,IAAK;MAC1B,IAAIH,GAAG,CAACG,MAAM,CAAC,IAAI,OAAOH,GAAG,CAACG,MAAM,CAAC,KAAK,QAAQ,EAAE;QAClDC,MAAM,CAACC,IAAI,CAACL,GAAG,CAACG,MAAM,CAAC,CAAC,CAACD,OAAO,CAAEI,GAAG,IAAK;UACxCL,YAAY,CAAE,GAAEE,MAAO,IAAGG,GAAI,EAAC,CAAC,GAAGN,GAAG,CAACG,MAAM,CAAC,CAACG,GAAG,CAAC;QACrD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLL,YAAY,CAACE,MAAM,CAAC,GAAGH,GAAG,CAACG,MAAM,CAAC;MACpC;IACF,CAAC,CAAC;IACF,OAAOF,YAAY;EACrB,CAAC,CAAC;EACF,OAAOH,OAAO;AAChB,CAAC;AAED,MAAMS,aAAa,GAAGA,CAACC,GAAG,EAAEC,SAAS,GAAG,EAAE,KAAK;EAC7C,OAAOL,MAAM,CAACC,IAAI,CAACG,GAAG,CAAC,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEL,GAAG,KAAK;IAC3C,MAAMM,MAAM,GAAGH,SAAS,GAAI,GAAEA,SAAU,IAAGH,GAAI,EAAC,GAAGA,GAAG;IACtD,MAAMO,KAAK,GAAGL,GAAG,CAACF,GAAG,CAAC;IAEtB,IAAI,OAAOO,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxE,MAAMG,SAAS,GAAGT,aAAa,CAACM,KAAK,EAAED,MAAM,CAAC;MAC9CR,MAAM,CAACa,MAAM,CAACN,GAAG,EAAEK,SAAS,CAAC;IAC/B,CAAC,MAAM;MACLL,GAAG,CAACC,MAAM,CAAC,GAAGC,KAAK;IACrB;IAEA,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAGA,CAACtB,IAAI,EAAEC,OAAO,KAAK;EACnD,MAAMC,OAAO,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAK;IAChC,MAAMC,YAAY,GAAG;MAAE,GAAGD;IAAI,CAAC;IAC/BH,OAAO,CAACK,OAAO,CAAEC,MAAM,IAAK;MAC1B,IAAIF,YAAY,CAACE,MAAM,CAAC,IAAI,OAAOF,YAAY,CAACE,MAAM,CAAC,KAAK,QAAQ,EAAE;QACpE,MAAMgB,eAAe,GAAGZ,aAAa,CAACN,YAAY,CAACE,MAAM,CAAC,CAAC;QAC3D,OAAOF,YAAY,CAACE,MAAM,CAAC;QAC3BC,MAAM,CAACa,MAAM,CAAChB,YAAY,EAAEkB,eAAe,CAAC;MAC9C;IACF,CAAC,CAAC;IACF,OAAOlB,YAAY;EACrB,CAAC,CAAC;EAEF,OAAOH,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}