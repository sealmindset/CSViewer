{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [columnConfig, setColumnConfig] = useState({\n    renamedHeaders: {},\n    hiddenColumns: []\n  });\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = columnConfig.renamedHeaders[header] || header;\n        if (!columnConfig.hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [columnConfig.renamedHeaders, columnConfig.hiddenColumns, headers, filterCriteria]);\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!columnConfig.hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, columnConfig.hiddenColumns]);\n  useEffect(() => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return; // No need to group if no columns are selected\n    }\n\n    const groups = {};\n    data.forEach(row => {\n      const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    // Sort the data based on the groupBy column and any additional sorting criteria\n    const groupedData = Object.values(groups).flat().sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n    setData(groupedData);\n  }, [data, groupByColumns, hiddenColumns]);\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse as before\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: result => {\n            setData(result.data);\n            setHeaders(result.meta.fields);\n            setColumnConfig({\n              renamedHeaders: {},\n              hiddenColumns: []\n            });\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          }\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data and flatten the 'PROPERTIES' column if present\n        try {\n          const jsonData = JSON.parse(fileContent);\n\n          // Check if 'PROPERTIES' column exists and if so, flatten it\n          if (jsonData[0] && jsonData[0].PROPERTIES) {\n            setColumnConfig(prevConfig => ({\n              ...prevConfig,\n              renamedHeaders: {\n                ...prevConfig.renamedHeaders,\n                ...jsonData[0].PROPERTIES\n              }\n            }));\n            setData(flattenJSONColumns(jsonData, jsonData[0].PROPERTIES));\n          } else {\n            // If 'PROPERTIES' column does not exist, flatten the entire JSON object\n            setData(flattenJSONColumns([jsonData], columnConfig.renamedHeaders));\n          }\n          setHeaders(Object.keys(flattenedData[0]));\n          setFilterCriteria({});\n          setSearchTerms({});\n          setDropdownOptions({});\n          setGroupByColumns({});\n        } catch (error) {\n          alert(\"Error parsing JSON data from the file.\");\n          console.error(error);\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, [columnConfig.renamedHeaders]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    // Allow both CSV and JSON files\n    multiple: false\n  });\n  const updatedHeaders = [...headers.slice(0, 1), \"groupby\", ...headers.slice(1)];\n  const columns = updatedHeaders.map(header => ({\n    name: columnConfig.renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: row => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: header === \"groupby\" || hiddenColumns.includes(header),\n    grow: 1\n  }));\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => {\n      if (isChecked) {\n        return prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column);\n      } else {\n        return [...prevHiddenColumns, column];\n      }\n    });\n  };\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => ({\n      ...prevGroupByColumns,\n      [column]: isChecked\n    }));\n  };\n  const handleReset = () => {\n    setColumnConfig({\n      renamedHeaders: {},\n      hiddenColumns: []\n    });\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n  };\n\n  // ... (handleFileNameSubmit, handleDownload, promptFileName functions)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CSV | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV | JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: columnConfig.renamedHeaders[header] || header,\n                  onChange: e => setColumnConfig(prevConfig => ({\n                    ...prevConfig,\n                    renamedHeaders: {\n                      ...prevConfig.renamedHeaders,\n                      [header]: e.target.value\n                    }\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  } // Set the input width to 100%\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [columnConfig.renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${columnConfig.renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [header]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value.slice(-100) // Take the latter part of the value\n                        }));\n                      },\n\n                      list: `datalist-${header}`,\n                      maxLength: 98,\n                      size: 95 // Set the input size to 100\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: data,\n          pagination: true,\n          paginationPerPage: 10,\n          onRowClicked: handleRowClick,\n          noHeader: true,\n          customStyles: {\n            headCells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                fontWeight: \"bold\",\n                textAlign: \"left\"\n              }\n            },\n            cells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                textAlign: \"left\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Row Popup\",\n      className: \"row-popup-modal\",\n      overlayClassName: \"row-popup-modal-overlay\",\n      children: isModalOpen && /*#__PURE__*/_jsxDEV(RowPopup, {\n        headers: headers,\n        rowData: selectedRowData,\n        renamedHeaders: columnConfig.renamedHeaders,\n        hiddenColumns: hiddenColumns,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"csv\"),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"json\"),\n          children: \"Download JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      contentLabel: \"Enter Filename\",\n      className: \"filename-modal\",\n      overlayClassName: \"filename-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filename-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Filename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filename-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fileName,\n            onChange: e => setFileName(e.target.value),\n            placeholder: `Enter filename`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-extension\",\n            children: `.${selectedFileFormat}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileNameSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1Ci+iNN9+p+T2p9aAh2JpQTVN+s=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","columnConfig","setColumnConfig","renamedHeaders","hiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","groupByColumns","setGroupByColumns","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","setHiddenColumns","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","Object","keys","length","groups","groupKey","entries","column","selected","join","push","groupedData","values","flat","sort","a","b","sortByColumn","find","sortBy","_","aValue","bValue","localeCompare","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parse","skipEmptyLines","complete","meta","fields","jsonData","JSON","PROPERTIES","prevConfig","flattenJSONColumns","flattenedData","error","alert","console","readAsText","getRootProps","getInputProps","onDrop","accept","multiple","updatedHeaders","slice","columns","selector","sortable","wrap","format","substring","omit","grow","handleRowClick","handleColumnToggle","isChecked","checked","prevHiddenColumns","hiddenColumn","handleGroupByToggle","prevGroupByColumns","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","maxLength","style","width","_dropdownOptions$head","Fragment","placeholder","prevSearchTerms","list","size","id","whiteSpace","overflow","textOverflow","onClick","pagination","paginationPerPage","onRowClicked","noHeader","customStyles","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","textAlign","cells","isOpen","onRequestClose","contentLabel","overlayClassName","rowData","onClose","promptFileName","isFileNameModalOpen","setIsFileNameModalOpen","setFileName","selectedFileFormat","handleFileNameSubmit","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]); \n  const [headers, setHeaders] = useState([]);\n  const [columnConfig, setColumnConfig] = useState({ renamedHeaders: {}, hiddenColumns: [] });\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  \n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = columnConfig.renamedHeaders[header] || header;\n        if (!columnConfig.hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [columnConfig.renamedHeaders, columnConfig.hiddenColumns, headers, filterCriteria]);\n\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!columnConfig.hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, columnConfig.hiddenColumns]);\n\n  useEffect(() => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return; // No need to group if no columns are selected\n    }\n\n    const groups = {};\n    data.forEach((row) => {\n      const groupKey = Object.entries(groupByColumns)\n        .map(([column, selected]) => (selected ? row[column] : \"\"))\n        .join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    // Sort the data based on the groupBy column and any additional sorting criteria\n    const groupedData = Object.values(groups).flat().sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n\n    setData(groupedData);\n  }, [data, groupByColumns, hiddenColumns]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse as before\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            setData(result.data);\n            setHeaders(result.meta.fields);\n            setColumnConfig({ renamedHeaders: {}, hiddenColumns: [] });\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          },\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data and flatten the 'PROPERTIES' column if present\n        try {\n          const jsonData = JSON.parse(fileContent);\n\n          // Check if 'PROPERTIES' column exists and if so, flatten it\n          if (jsonData[0] && jsonData[0].PROPERTIES) {\n            setColumnConfig((prevConfig) => ({\n              ...prevConfig,\n              renamedHeaders: {\n                ...prevConfig.renamedHeaders,\n                ...jsonData[0].PROPERTIES,\n              },\n            }));\n            setData(flattenJSONColumns(jsonData, jsonData[0].PROPERTIES));\n          } else {\n            // If 'PROPERTIES' column does not exist, flatten the entire JSON object\n            setData(flattenJSONColumns([jsonData], columnConfig.renamedHeaders));\n          }\n          \n          setHeaders(Object.keys(flattenedData[0]));\n          setFilterCriteria({});\n          setSearchTerms({});\n          setDropdownOptions({});\n          setGroupByColumns({});\n        } catch (error) {\n          alert(\"Error parsing JSON data from the file.\");\n          console.error(error);\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, [columnConfig.renamedHeaders]);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\", // Allow both CSV and JSON files\n    multiple: false,\n  });\n\n  const updatedHeaders = [...headers.slice(0, 1), \"groupby\", ...headers.slice(1)];\n\n  const columns = updatedHeaders.map((header) => ({\n    name: columnConfig.renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: (row) => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: header === \"groupby\" || hiddenColumns.includes(header),\n    grow: 1,\n  }));\n\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) => {\n      if (isChecked) {\n        return prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column);\n      } else {\n        return [...prevHiddenColumns, column];\n      }\n    });\n  };\n\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => ({\n      ...prevGroupByColumns,\n      [column]: isChecked,\n    }));\n  };\n\n  const handleReset = () => {\n    setColumnConfig({ renamedHeaders: {}, hiddenColumns: [] });\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n  };\n\n  // ... (handleFileNameSubmit, handleDownload, promptFileName functions)\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CSV Table Display */}\n      <div className=\"section section1\">\n        <h1>CSV | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CSV File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV | JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={columnConfig.renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setColumnConfig((prevConfig) => ({\n                          ...prevConfig,\n                          renamedHeaders: {\n                            ...prevConfig.renamedHeaders,\n                            [header]: e.target.value,\n                          },\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }} // Set the input width to 100%\n                    />\n                  </td>\n                  <td>\n                    {/* Add \"Group By\" text next to the checkmark */}\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section filter-section\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{columnConfig.renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Search ${columnConfig.renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            setFilterCriteria((prevCriteria) => ({\n                              ...prevCriteria,\n                              [header]: value,\n                            }));\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: value.slice(-100), // Take the latter part of the value\n                            }));\n                          }}\n                          list={`datalist-${header}`}\n                          maxLength={98}\n                          size={95} // Set the input size to 100\n                        />\n                        <datalist id={`datalist-${header}`}>\n                          <option value=\"All\" />\n                          {dropdownOptions[header]?.map((value) => (\n                            <option\n                              key={value}\n                              value={value}\n                              style={{\n                                width: \"100%\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                              }}\n                            >\n                              {value.length > 100 ? `...${value.slice(-100)}` : value}\n                            </option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n\n      {/* Section 5: Table */}\n      <div className=\"section section5\">\n        <div className=\"table-container\">\n          <DataTable\n            columns={columns}\n            data={data}\n            pagination\n            paginationPerPage={10}\n            onRowClicked={handleRowClick}\n            noHeader\n            customStyles={{\n              headCells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  fontWeight: \"bold\",\n                  textAlign: \"left\",\n                },\n              },\n              cells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  textAlign: \"left\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Modal for displaying the RowPopup */}\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Row Popup\"\n        className=\"row-popup-modal\"\n        overlayClassName=\"row-popup-modal-overlay\"\n      >\n        {isModalOpen && (\n          <RowPopup\n            headers={headers}\n            rowData={selectedRowData}\n            renamedHeaders={columnConfig.renamedHeaders}\n            hiddenColumns={hiddenColumns}\n            onClose={() => setIsModalOpen(false)}\n          />\n        )}\n      </Modal>\n\n      {/* Section 6: Download Buttons for CSV and JSON */}\n      <div className=\"section section6\">\n        <div className=\"download-buttons\">\n          <button onClick={() => promptFileName(\"csv\")}>Download CSV</button>\n          <button onClick={() => promptFileName(\"json\")}>Download JSON</button>\n        </div>\n      </div>\n\n      {/* Modal for FileName */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        contentLabel=\"Enter Filename\"\n        className=\"filename-modal\"\n        overlayClassName=\"filename-modal-overlay\"\n      >\n        <div className=\"filename-modal-content\">\n          <h2>Enter Filename</h2>\n          <div className=\"filename-input-container\">\n            <input\n              type=\"text\"\n              value={fileName}\n              onChange={(e) => setFileName(e.target.value)}\n              placeholder={`Enter filename`}\n            />\n            <span className=\"file-extension\">{`.${selectedFileFormat}`}</span>\n          </div>\n          <button onClick={handleFileNameSubmit}>Submit</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}