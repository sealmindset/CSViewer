{"ast":null,"code":"export function flattenJSON(jsonData) {\n  const result = {};\n  function recurse(curr, prop) {\n    if (typeof curr !== \"object\" || curr === null) {\n      result[prop] = curr;\n    } else if (Array.isArray(curr)) {\n      if (curr.length === 0) {\n        result[prop] = [];\n      } else {\n        for (let i = 0, len = curr.length; i < len; i++) {\n          recurse(curr[i], `${prop}[${i}]`);\n        }\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in curr) {\n        isEmpty = false;\n        if (curr.hasOwnProperty(p)) {\n          recurse(curr[p], prop ? `${prop}.${p}` : p); // Changed this line to handle nested objects correctly\n        }\n      }\n\n      if (isEmpty && prop) {\n        result[prop] = {};\n      }\n    }\n  }\n  recurse(jsonData, \"\");\n  return result;\n}\nexport function flattenJSONColumns(data, renamedHeaders) {\n  const flattenedData = data.map(row => {\n    const newRow = {};\n    for (const header in row) {\n      if (row.hasOwnProperty(header)) {\n        const value = row[header];\n        if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n          // Flatten the object and add its keys as separate columns\n          for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n              const newKey = renamedHeaders[key] || key;\n              newRow[newKey] = value[key];\n            }\n          }\n        } else {\n          const newHeader = renamedHeaders[header] || header;\n          newRow[newHeader] = value;\n        }\n      }\n    }\n    return newRow;\n  });\n  return flattenedData;\n}","map":{"version":3,"names":["flattenJSON","jsonData","result","recurse","curr","prop","Array","isArray","length","i","len","isEmpty","p","hasOwnProperty","flattenJSONColumns","data","renamedHeaders","flattenedData","map","row","newRow","header","value","key","newKey","newHeader"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/utils.js"],"sourcesContent":["export function flattenJSON(jsonData) {\n  const result = {};\n\n  function recurse(curr, prop) {\n    if (typeof curr !== \"object\" || curr === null) {\n      result[prop] = curr;\n    } else if (Array.isArray(curr)) {\n      if (curr.length === 0) {\n        result[prop] = [];\n      } else {\n        for (let i = 0, len = curr.length; i < len; i++) {\n          recurse(curr[i], `${prop}[${i}]`);\n        }\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in curr) {\n        isEmpty = false;\n        if (curr.hasOwnProperty(p)) {\n          recurse(curr[p], prop ? `${prop}.${p}` : p); // Changed this line to handle nested objects correctly\n        }\n      }\n      if (isEmpty && prop) {\n        result[prop] = {};\n      }\n    }\n  }\n\n  recurse(jsonData, \"\");\n  return result;\n}\n\n\nexport function flattenJSONColumns(data, renamedHeaders) {\n  const flattenedData = data.map((row) => {\n    const newRow = {};\n    for (const header in row) {\n      if (row.hasOwnProperty(header)) {\n        const value = row[header];\n        if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n          // Flatten the object and add its keys as separate columns\n          for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n              const newKey = renamedHeaders[key] || key;\n              newRow[newKey] = value[key];\n            }\n          }\n        } else {\n          const newHeader = renamedHeaders[header] || header;\n          newRow[newHeader] = value;\n        }\n      }\n    }\n    return newRow;\n  });\n\n  return flattenedData;\n}\n\n"],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,QAAQ,EAAE;EACpC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,SAASC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC3B,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC7CF,MAAM,CAACG,IAAI,CAAC,GAAGD,IAAI;IACrB,CAAC,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MAC9B,IAAIA,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;QACrBN,MAAM,CAACG,IAAI,CAAC,GAAG,EAAE;MACnB,CAAC,MAAM;QACL,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,IAAI,CAACI,MAAM,EAAEC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;UAC/CN,OAAO,CAACC,IAAI,CAACK,CAAC,CAAC,EAAG,GAAEJ,IAAK,IAAGI,CAAE,GAAE,CAAC;QACnC;MACF;IACF,CAAC,MAAM;MACL,IAAIE,OAAO,GAAG,IAAI;MAClB,KAAK,MAAMC,CAAC,IAAIR,IAAI,EAAE;QACpBO,OAAO,GAAG,KAAK;QACf,IAAIP,IAAI,CAACS,cAAc,CAACD,CAAC,CAAC,EAAE;UAC1BT,OAAO,CAACC,IAAI,CAACQ,CAAC,CAAC,EAAEP,IAAI,GAAI,GAAEA,IAAK,IAAGO,CAAE,EAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;QAC/C;MACF;;MACA,IAAID,OAAO,IAAIN,IAAI,EAAE;QACnBH,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;MACnB;IACF;EACF;EAEAF,OAAO,CAACF,QAAQ,EAAE,EAAE,CAAC;EACrB,OAAOC,MAAM;AACf;AAGA,OAAO,SAASY,kBAAkBA,CAACC,IAAI,EAAEC,cAAc,EAAE;EACvD,MAAMC,aAAa,GAAGF,IAAI,CAACG,GAAG,CAAEC,GAAG,IAAK;IACtC,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,KAAK,MAAMC,MAAM,IAAIF,GAAG,EAAE;MACxB,IAAIA,GAAG,CAACN,cAAc,CAACQ,MAAM,CAAC,EAAE;QAC9B,MAAMC,KAAK,GAAGH,GAAG,CAACE,MAAM,CAAC;QACzB,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,CAAChB,KAAK,CAACC,OAAO,CAACe,KAAK,CAAC,EAAE;UACxE;UACA,KAAK,MAAMC,GAAG,IAAID,KAAK,EAAE;YACvB,IAAIA,KAAK,CAACT,cAAc,CAACU,GAAG,CAAC,EAAE;cAC7B,MAAMC,MAAM,GAAGR,cAAc,CAACO,GAAG,CAAC,IAAIA,GAAG;cACzCH,MAAM,CAACI,MAAM,CAAC,GAAGF,KAAK,CAACC,GAAG,CAAC;YAC7B;UACF;QACF,CAAC,MAAM;UACL,MAAME,SAAS,GAAGT,cAAc,CAACK,MAAM,CAAC,IAAIA,MAAM;UAClDD,MAAM,CAACK,SAAS,CAAC,GAAGH,KAAK;QAC3B;MACF;IACF;IACA,OAAOF,MAAM;EACf,CAAC,CAAC;EAEF,OAAOH,aAAa;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}