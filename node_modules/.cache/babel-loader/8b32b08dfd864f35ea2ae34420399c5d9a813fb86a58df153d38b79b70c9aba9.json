{"ast":null,"code":"// utils.js\nimport Papa from \"papaparse\";\nexport function flattenProperties(data) {\n  const flattenedData = {};\n  function flattenObject(obj, parentKey = '') {\n    for (const key in obj) {\n      const value = obj[key];\n      const newKey = parentKey ? `${parentKey}_${key}` : key;\n      if (typeof value === 'object' && value !== null) {\n        flattenObject(value, newKey);\n      } else {\n        flattenedData[newKey] = value;\n      }\n    }\n  }\n  try {\n    const parsedData = JSON.parse(data);\n    flattenObject(parsedData);\n  } catch (error) {\n    const [key, value] = data.split(':').map(item => item.trim());\n    flattenedData[key] = value;\n  }\n  return flattenedData;\n}\nexport function flattenData(data, propertiesKey = \"PROPERTIES\") {\n  const flattenedData = [];\n  const headers = [];\n  function flattenObject(obj, prefix = \"\") {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n          flattenObject(value, prefix + key + \".\");\n        } else if (Array.isArray(value)) {\n          value.forEach((item, index) => {\n            if (typeof item === \"object\" && item !== null) {\n              flattenObject(item, `${prefix}${key}[${index}].`);\n            } else {\n              const newKey = `${prefix}${key}[${index}]`;\n              if (!headers.includes(newKey)) {\n                headers.push(newKey);\n              }\n              flattenedData.push({\n                [newKey]: item\n              });\n            }\n          });\n        } else {\n          const newKey = prefix + key;\n          if (!headers.includes(newKey)) {\n            headers.push(newKey);\n          }\n          flattenedData.push({\n            [newKey]: value\n          });\n        }\n      }\n    }\n  }\n  if (Array.isArray(data)) {\n    data.forEach(item => {\n      if (item.hasOwnProperty(propertiesKey) && typeof item[propertiesKey] === \"object\") {\n        const propertiesData = item[propertiesKey];\n        delete item[propertiesKey];\n        flattenObject(item);\n        for (const key in propertiesData) {\n          if (propertiesData.hasOwnProperty(key)) {\n            const value = propertiesData[key];\n            const newKey = `${propertiesKey}_${key}`;\n            if (!headers.includes(newKey)) {\n              headers.push(newKey);\n            }\n            flattenedData.push({\n              [newKey]: value\n            });\n          }\n        }\n      } else {\n        flattenObject(item);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    // Single JSON object\n    if (data.hasOwnProperty(propertiesKey) && typeof data[propertiesKey] === \"object\") {\n      const propertiesData = data[propertiesKey];\n      delete data[propertiesKey];\n      flattenObject(data);\n      for (const key in propertiesData) {\n        if (propertiesData.hasOwnProperty(key)) {\n          const value = propertiesData[key];\n          const newKey = `${propertiesKey}_${key}`;\n          if (!headers.includes(newKey)) {\n            headers.push(newKey);\n          }\n          flattenedData.push({\n            [newKey]: value\n          });\n        }\n      }\n    } else {\n      flattenObject(data);\n    }\n  }\n  return {\n    headers,\n    data: flattenedData\n  };\n}\n\n// Other utility functions may go here","map":{"version":3,"names":["Papa","flattenProperties","data","flattenedData","flattenObject","obj","parentKey","key","value","newKey","parsedData","JSON","parse","error","split","map","item","trim","flattenData","propertiesKey","headers","prefix","hasOwnProperty","Array","isArray","forEach","index","includes","push","propertiesData"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/utils.js"],"sourcesContent":["// utils.js\nimport Papa from \"papaparse\";\n\nexport function flattenProperties(data) {\n  const flattenedData = {};\n\n  function flattenObject(obj, parentKey = '') {\n    for (const key in obj) {\n      const value = obj[key];\n      const newKey = parentKey ? `${parentKey}_${key}` : key;\n\n      if (typeof value === 'object' && value !== null) {\n        flattenObject(value, newKey);\n      } else {\n        flattenedData[newKey] = value;\n      }\n    }\n  }\n\n  try {\n    const parsedData = JSON.parse(data);\n    flattenObject(parsedData);\n  } catch (error) {\n    const [key, value] = data.split(':').map((item) => item.trim());\n    flattenedData[key] = value;\n  }\n\n  return flattenedData;\n}\n\nexport function flattenData(data, propertiesKey = \"PROPERTIES\") {\n  const flattenedData = [];\n  const headers = [];\n\n  function flattenObject(obj, prefix = \"\") {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        if (typeof value === \"object\" && value !== null && !Array.isArray(value)) {\n          flattenObject(value, prefix + key + \".\");\n        } else if (Array.isArray(value)) {\n          value.forEach((item, index) => {\n            if (typeof item === \"object\" && item !== null) {\n              flattenObject(item, `${prefix}${key}[${index}].`);\n            } else {\n              const newKey = `${prefix}${key}[${index}]`;\n              if (!headers.includes(newKey)) {\n                headers.push(newKey);\n              }\n              flattenedData.push({ [newKey]: item });\n            }\n          });\n        } else {\n          const newKey = prefix + key;\n          if (!headers.includes(newKey)) {\n            headers.push(newKey);\n          }\n          flattenedData.push({ [newKey]: value });\n        }\n      }\n    }\n  }\n\n  if (Array.isArray(data)) {\n    data.forEach((item) => {\n      if (item.hasOwnProperty(propertiesKey) && typeof item[propertiesKey] === \"object\") {\n        const propertiesData = item[propertiesKey];\n        delete item[propertiesKey];\n        flattenObject(item);\n        for (const key in propertiesData) {\n          if (propertiesData.hasOwnProperty(key)) {\n            const value = propertiesData[key];\n            const newKey = `${propertiesKey}_${key}`;\n            if (!headers.includes(newKey)) {\n              headers.push(newKey);\n            }\n            flattenedData.push({ [newKey]: value });\n          }\n        }\n      } else {\n        flattenObject(item);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    // Single JSON object\n    if (data.hasOwnProperty(propertiesKey) && typeof data[propertiesKey] === \"object\") {\n      const propertiesData = data[propertiesKey];\n      delete data[propertiesKey];\n      flattenObject(data);\n      for (const key in propertiesData) {\n        if (propertiesData.hasOwnProperty(key)) {\n          const value = propertiesData[key];\n          const newKey = `${propertiesKey}_${key}`;\n          if (!headers.includes(newKey)) {\n            headers.push(newKey);\n          }\n          flattenedData.push({ [newKey]: value });\n        }\n      }\n    } else {\n      flattenObject(data);\n    }\n  }\n\n  return { headers, data: flattenedData };\n}\n\n// Other utility functions may go here\n"],"mappings":"AAAA;AACA,OAAOA,IAAI,MAAM,WAAW;AAE5B,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,MAAMC,aAAa,GAAG,CAAC,CAAC;EAExB,SAASC,aAAaA,CAACC,GAAG,EAAEC,SAAS,GAAG,EAAE,EAAE;IAC1C,KAAK,MAAMC,GAAG,IAAIF,GAAG,EAAE;MACrB,MAAMG,KAAK,GAAGH,GAAG,CAACE,GAAG,CAAC;MACtB,MAAME,MAAM,GAAGH,SAAS,GAAI,GAAEA,SAAU,IAAGC,GAAI,EAAC,GAAGA,GAAG;MAEtD,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;QAC/CJ,aAAa,CAACI,KAAK,EAAEC,MAAM,CAAC;MAC9B,CAAC,MAAM;QACLN,aAAa,CAACM,MAAM,CAAC,GAAGD,KAAK;MAC/B;IACF;EACF;EAEA,IAAI;IACF,MAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACV,IAAI,CAAC;IACnCE,aAAa,CAACM,UAAU,CAAC;EAC3B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,CAACN,GAAG,EAAEC,KAAK,CAAC,GAAGN,IAAI,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IAC/Dd,aAAa,CAACI,GAAG,CAAC,GAAGC,KAAK;EAC5B;EAEA,OAAOL,aAAa;AACtB;AAEA,OAAO,SAASe,WAAWA,CAAChB,IAAI,EAAEiB,aAAa,GAAG,YAAY,EAAE;EAC9D,MAAMhB,aAAa,GAAG,EAAE;EACxB,MAAMiB,OAAO,GAAG,EAAE;EAElB,SAAShB,aAAaA,CAACC,GAAG,EAAEgB,MAAM,GAAG,EAAE,EAAE;IACvC,KAAK,MAAMd,GAAG,IAAIF,GAAG,EAAE;MACrB,IAAIA,GAAG,CAACiB,cAAc,CAACf,GAAG,CAAC,EAAE;QAC3B,MAAMC,KAAK,GAAGH,GAAG,CAACE,GAAG,CAAC;QACtB,IAAI,OAAOC,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,CAACe,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,EAAE;UACxEJ,aAAa,CAACI,KAAK,EAAEa,MAAM,GAAGd,GAAG,GAAG,GAAG,CAAC;QAC1C,CAAC,MAAM,IAAIgB,KAAK,CAACC,OAAO,CAAChB,KAAK,CAAC,EAAE;UAC/BA,KAAK,CAACiB,OAAO,CAAC,CAACT,IAAI,EAAEU,KAAK,KAAK;YAC7B,IAAI,OAAOV,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;cAC7CZ,aAAa,CAACY,IAAI,EAAG,GAAEK,MAAO,GAAEd,GAAI,IAAGmB,KAAM,IAAG,CAAC;YACnD,CAAC,MAAM;cACL,MAAMjB,MAAM,GAAI,GAAEY,MAAO,GAAEd,GAAI,IAAGmB,KAAM,GAAE;cAC1C,IAAI,CAACN,OAAO,CAACO,QAAQ,CAAClB,MAAM,CAAC,EAAE;gBAC7BW,OAAO,CAACQ,IAAI,CAACnB,MAAM,CAAC;cACtB;cACAN,aAAa,CAACyB,IAAI,CAAC;gBAAE,CAACnB,MAAM,GAAGO;cAAK,CAAC,CAAC;YACxC;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,MAAMP,MAAM,GAAGY,MAAM,GAAGd,GAAG;UAC3B,IAAI,CAACa,OAAO,CAACO,QAAQ,CAAClB,MAAM,CAAC,EAAE;YAC7BW,OAAO,CAACQ,IAAI,CAACnB,MAAM,CAAC;UACtB;UACAN,aAAa,CAACyB,IAAI,CAAC;YAAE,CAACnB,MAAM,GAAGD;UAAM,CAAC,CAAC;QACzC;MACF;IACF;EACF;EAEA,IAAIe,KAAK,CAACC,OAAO,CAACtB,IAAI,CAAC,EAAE;IACvBA,IAAI,CAACuB,OAAO,CAAET,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACM,cAAc,CAACH,aAAa,CAAC,IAAI,OAAOH,IAAI,CAACG,aAAa,CAAC,KAAK,QAAQ,EAAE;QACjF,MAAMU,cAAc,GAAGb,IAAI,CAACG,aAAa,CAAC;QAC1C,OAAOH,IAAI,CAACG,aAAa,CAAC;QAC1Bf,aAAa,CAACY,IAAI,CAAC;QACnB,KAAK,MAAMT,GAAG,IAAIsB,cAAc,EAAE;UAChC,IAAIA,cAAc,CAACP,cAAc,CAACf,GAAG,CAAC,EAAE;YACtC,MAAMC,KAAK,GAAGqB,cAAc,CAACtB,GAAG,CAAC;YACjC,MAAME,MAAM,GAAI,GAAEU,aAAc,IAAGZ,GAAI,EAAC;YACxC,IAAI,CAACa,OAAO,CAACO,QAAQ,CAAClB,MAAM,CAAC,EAAE;cAC7BW,OAAO,CAACQ,IAAI,CAACnB,MAAM,CAAC;YACtB;YACAN,aAAa,CAACyB,IAAI,CAAC;cAAE,CAACnB,MAAM,GAAGD;YAAM,CAAC,CAAC;UACzC;QACF;MACF,CAAC,MAAM;QACLJ,aAAa,CAACY,IAAI,CAAC;MACrB;IACF,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,OAAOd,IAAI,KAAK,QAAQ,EAAE;IACnC;IACA,IAAIA,IAAI,CAACoB,cAAc,CAACH,aAAa,CAAC,IAAI,OAAOjB,IAAI,CAACiB,aAAa,CAAC,KAAK,QAAQ,EAAE;MACjF,MAAMU,cAAc,GAAG3B,IAAI,CAACiB,aAAa,CAAC;MAC1C,OAAOjB,IAAI,CAACiB,aAAa,CAAC;MAC1Bf,aAAa,CAACF,IAAI,CAAC;MACnB,KAAK,MAAMK,GAAG,IAAIsB,cAAc,EAAE;QAChC,IAAIA,cAAc,CAACP,cAAc,CAACf,GAAG,CAAC,EAAE;UACtC,MAAMC,KAAK,GAAGqB,cAAc,CAACtB,GAAG,CAAC;UACjC,MAAME,MAAM,GAAI,GAAEU,aAAc,IAAGZ,GAAI,EAAC;UACxC,IAAI,CAACa,OAAO,CAACO,QAAQ,CAAClB,MAAM,CAAC,EAAE;YAC7BW,OAAO,CAACQ,IAAI,CAACnB,MAAM,CAAC;UACtB;UACAN,aAAa,CAACyB,IAAI,CAAC;YAAE,CAACnB,MAAM,GAAGD;UAAM,CAAC,CAAC;QACzC;MACF;IACF,CAAC,MAAM;MACLJ,aAAa,CAACF,IAAI,CAAC;IACrB;EACF;EAEA,OAAO;IAAEkB,OAAO;IAAElB,IAAI,EAAEC;EAAc,CAAC;AACzC;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}