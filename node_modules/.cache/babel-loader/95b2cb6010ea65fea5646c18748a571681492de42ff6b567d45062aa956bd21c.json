{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenJSON } from \"./utils\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [groupedData, setGroupedData] = useState([]);\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n\n  // Process uploaded CSV data\n  useEffect(() => {\n    if (data.length > 0) {\n      const flattenedData = data.map(row => {\n        if (row[\"PROPERTIES\"]) {\n          const properties = JSON.parse(row[\"PROPERTIES\"]);\n          delete row[\"PROPERTIES\"];\n          return {\n            ...row,\n            ...flattenJSON(properties)\n          };\n        }\n        return row;\n      });\n      setData(flattenedData);\n    }\n  }, [data]);\n\n  // Perform filtering based on filterCriteria and searchTerms\n  const filteredData = useCallback(() => {\n    return data.filter(row => headers.every(header => {\n      const criteria = filterCriteria[header];\n      const searchTerm = searchTerms[header];\n      return (!criteria || criteria === \"All\" || row[header] === criteria) && (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()));\n    }));\n  }, [data, headers, filterCriteria, searchTerms]);\n  useEffect(() => {\n    setGroupedData(groupAndSortTableData(filteredData()));\n  }, [headers, filteredData]);\n\n  // Group and sort table data based on groupByColumns\n  const groupAndSortTableData = useCallback(tableData => {\n    if (!tableData || Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n    const groups = {};\n    tableData.forEach(row => {\n      const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n    return Object.values(groups).flat().sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  // Handle file drop\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: result => {\n            setData(result.data);\n            setHeaders(Object.keys(result.data[0]));\n          }\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        const jsonData = JSON.parse(fileContent);\n        setData(jsonData);\n        setHeaders(Object.keys(jsonData[0]));\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, []);\n\n  // Define the table columns\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n  const columns = updatedHeaders.map(header => {\n    const isPropertiesHeader = header.startsWith(\"PROPERTIES_\");\n    const newColumn = renamedHeaders[header] || header;\n    return {\n      name: isPropertiesHeader ? newColumn.substring(\"PROPERTIES_\".length) : newColumn,\n      selector: header,\n      sortable: true,\n      wrap: true,\n      format: row => {\n        const value = row[header];\n        if (value && value.length > 100) {\n          return value.substring(0, 100) + \"...\";\n        }\n        return value;\n      },\n      omit: header === groupByColumn || hiddenColumns.includes(header),\n      grow: 1\n    };\n  });\n\n  // Handle column toggle\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => isChecked ? prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column) : [...prevHiddenColumns, column]);\n  };\n\n  // Handle group by toggle\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => {\n      const updatedGroupByColumns = {\n        ...prevGroupByColumns\n      };\n      updatedGroupByColumns[column] = isChecked;\n      return updatedGroupByColumns;\n    });\n  };\n\n  // Reset filters and group by selections\n  const handleReset = () => {\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setData(originalDataRef.current); // It seems `originalDataRef` is not defined in the original code. Make sure to define it or find a suitable alternative.\n  };\n\n  // Handle row click\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  // Handle file name submission for download\n  const promptFileName = format => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n\n  // Handle CSV or JSON download\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupedData.map(row => headers.reduce((acc, header) => {\n      if (!hiddenColumns.includes(header)) {\n        const newColumn = renamedHeaders[header] || header;\n        acc[newColumn] = row[header];\n      }\n      return acc;\n    }, {}));\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, {\n        header: true\n      });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n    const blob = new Blob([dataToExport], {\n      type: `text/${fileExtension};charset=utf-8;`\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CSV | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV | JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Filter ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        const newColumn = renamedHeaders[header] || header;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [newColumn]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value\n                        }));\n                      },\n                      list: `datalist-${header}`,\n                      maxLength: 100,\n                      size: 95\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: filteredData(),\n          pagination: true,\n          paginationPerPage: 10,\n          onRowClicked: handleRowClick,\n          noHeader: true,\n          customStyles: {\n            headCells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                fontWeight: \"bold\",\n                textAlign: \"left\"\n              }\n            },\n            cells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                textAlign: \"left\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Row Popup\",\n      className: \"row-popup-modal\",\n      overlayClassName: \"row-popup-modal-overlay\",\n      children: isModalOpen && /*#__PURE__*/_jsxDEV(RowPopup, {\n        headers: headers,\n        rowData: selectedRowData,\n        renamedHeaders: renamedHeaders,\n        hiddenColumns: hiddenColumns,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"csv\"),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"json\"),\n          children: \"Download JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      contentLabel: \"Enter Filename\",\n      className: \"filename-modal\",\n      overlayClassName: \"filename-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filename-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Filename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filename-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fileName,\n            onChange: e => setFileName(e.target.value),\n            placeholder: `Enter filename`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-extension\",\n            children: `.${selectedFileFormat}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileNameSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uGC65ihxOaelXeIDbziAHMykO5M=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","flattenJSON","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","groupedData","setGroupedData","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","selectedFileFormat","setSelectedFileFormat","fileName","setFileName","isFileNameModalOpen","setIsFileNameModalOpen","length","flattenedData","map","row","properties","JSON","parse","filteredData","filter","every","header","criteria","searchTerm","toLowerCase","includes","groupAndSortTableData","tableData","Object","keys","groupByColumns","groups","forEach","groupKey","entries","column","selected","join","push","values","flat","sort","a","b","sortByColumn","find","sortBy","_","aValue","bValue","localeCompare","getRootProps","getInputProps","onDrop","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","skipEmptyLines","complete","jsonData","alert","readAsText","groupByColumn","updatedHeaders","slice","columns","isPropertiesHeader","startsWith","newColumn","substring","selector","sortable","wrap","format","value","omit","grow","handleColumnToggle","isChecked","checked","prevHiddenColumns","hiddenColumn","handleGroupByToggle","setGroupByColumns","prevGroupByColumns","updatedGroupByColumns","handleReset","originalDataRef","current","handleRowClick","promptFileName","handleFileNameSubmit","trim","handleDownload","visibleData","reduce","acc","dataToExport","fileExtension","unparse","stringify","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","onChange","e","prevRenamedHeaders","maxLength","width","_dropdownOptions$head","Fragment","placeholder","prevCriteria","prevSearchTerms","list","size","id","dropdownOptions","whiteSpace","overflow","textOverflow","onClick","pagination","paginationPerPage","onRowClicked","noHeader","customStyles","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","textAlign","cells","isOpen","onRequestClose","contentLabel","overlayClassName","rowData","onClose","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenJSON } from \"./utils\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [groupedData, setGroupedData] = useState([]);\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n\n  // Process uploaded CSV data\n  useEffect(() => {\n    if (data.length > 0) {\n      const flattenedData = data.map((row) => {\n        if (row[\"PROPERTIES\"]) {\n          const properties = JSON.parse(row[\"PROPERTIES\"]);\n          delete row[\"PROPERTIES\"];\n          return { ...row, ...flattenJSON(properties) };\n        }\n        return row;\n      });\n\n      setData(flattenedData);\n    }\n  }, [data]);\n\n  // Perform filtering based on filterCriteria and searchTerms\n  const filteredData = useCallback(() => {\n    return data.filter((row) =>\n      headers.every((header) => {\n        const criteria = filterCriteria[header];\n        const searchTerm = searchTerms[header];\n        return (\n          (!criteria || criteria === \"All\" || row[header] === criteria) &&\n          (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()))\n        );\n      })\n    );\n  }, [data, headers, filterCriteria, searchTerms]);\n\n  useEffect(() => {\n    setGroupedData(groupAndSortTableData(filteredData()));\n  }, [headers, filteredData]);\n\n  // Group and sort table data based on groupByColumns\n  const groupAndSortTableData = useCallback((tableData) => {\n    if (!tableData || Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n\n    const groups = {};\n    tableData.forEach((row) => {\n      const groupKey = Object.entries(groupByColumns)\n        .map(([column, selected]) => (selected ? row[column] : \"\"))\n        .join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    return Object.values(groups)\n      .flat()\n      .sort((a, b) => {\n        const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n        if (sortByColumn) {\n          const [sortBy, _] = sortByColumn;\n          const aValue = a[sortBy];\n          const bValue = b[sortBy];\n          if (!hiddenColumns.includes(sortBy)) {\n            return aValue.localeCompare(bValue);\n          }\n        }\n        return 0;\n      });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  // Handle file drop\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            setData(result.data);\n            setHeaders(Object.keys(result.data[0]));\n          },\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        const jsonData = JSON.parse(fileContent);\n        setData(jsonData);\n        setHeaders(Object.keys(jsonData[0]));\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, []);\n\n  // Define the table columns\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n  const columns = updatedHeaders.map((header) => {\n    const isPropertiesHeader = header.startsWith(\"PROPERTIES_\");\n    const newColumn = renamedHeaders[header] || header;\n    return {\n      name: isPropertiesHeader ? newColumn.substring(\"PROPERTIES_\".length) : newColumn,\n      selector: header,\n      sortable: true,\n      wrap: true,\n      format: (row) => {\n        const value = row[header];\n        if (value && value.length > 100) {\n          return value.substring(0, 100) + \"...\";\n        }\n        return value;\n      },\n      omit: header === groupByColumn || hiddenColumns.includes(header),\n      grow: 1,\n    };\n  });\n\n  // Handle column toggle\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) =>\n      isChecked\n        ? prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column)\n        : [...prevHiddenColumns, column]\n    );\n  };\n\n  // Handle group by toggle\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => {\n      const updatedGroupByColumns = { ...prevGroupByColumns };\n      updatedGroupByColumns[column] = isChecked;\n      return updatedGroupByColumns;\n    });\n  };\n\n  // Reset filters and group by selections\n  const handleReset = () => {\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setData(originalDataRef.current); // It seems `originalDataRef` is not defined in the original code. Make sure to define it or find a suitable alternative.\n  };\n\n  // Handle row click\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  // Handle file name submission for download\n  const promptFileName = (format) => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n\n  // Handle CSV or JSON download\n  const handleDownload = (format, fileName) => {\n    const visibleData = groupedData.map((row) =>\n      headers.reduce((acc, header) => {\n        if (!hiddenColumns.includes(header)) {\n          const newColumn = renamedHeaders[header] || header;\n          acc[newColumn] = row[header];\n        }\n        return acc;\n      }, {})\n    );\n\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, { header: true });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n\n    const blob = new Blob([dataToExport], { type: `text/${fileExtension};charset=utf-8;` });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CSV Table Display */}\n      <div className=\"section section1\">\n        <h1>CSV | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CSV File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV | JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"100%\" }}\n                    />\n                  </td>\n                  <td>\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section filter-section\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Filter ${renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            const newColumn = renamedHeaders[header] || header;\n                            setFilterCriteria((prevCriteria) => ({\n                              ...prevCriteria,\n                              [newColumn]: value,\n                            }));\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: value,\n                            }));\n                          }}\n                          list={`datalist-${header}`}\n                          maxLength={100}\n                          size={95}\n                        />\n                        <datalist id={`datalist-${header}`}>\n                          <option value=\"All\" />\n                          {dropdownOptions[header]?.map((value) => (\n                            <option\n                              key={value}\n                              value={value}\n                              style={{\n                                width: \"100%\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                              }}\n                            >\n                              {value.length > 100 ? `...${value.slice(-100)}` : value}\n                            </option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n\n      {/* Section 5: Table */}\n      <div className=\"section section5\">\n        <div className=\"table-container\">\n          <DataTable\n            columns={columns}\n            data={filteredData()}\n            pagination\n            paginationPerPage={10}\n            onRowClicked={handleRowClick}\n            noHeader\n            customStyles={{\n              headCells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  fontWeight: \"bold\",\n                  textAlign: \"left\",\n                },\n              },\n              cells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  textAlign: \"left\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Modal for displaying the RowPopup */}\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Row Popup\"\n        className=\"row-popup-modal\"\n        overlayClassName=\"row-popup-modal-overlay\"\n      >\n        {isModalOpen && (\n          <RowPopup\n            headers={headers}\n            rowData={selectedRowData}\n            renamedHeaders={renamedHeaders}\n            hiddenColumns={hiddenColumns}\n            onClose={() => setIsModalOpen(false)}\n          />\n        )}\n      </Modal>\n\n      {/* Section 6: Download Buttons for CSV and JSON */}\n      <div className=\"section section6\">\n        <div className=\"download-buttons\">\n          <button onClick={() => promptFileName(\"csv\")}>Download CSV</button>\n          <button onClick={() => promptFileName(\"json\")}>Download JSON</button>\n        </div>\n      </div>\n\n      {/* Modal for FileName */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        contentLabel=\"Enter Filename\"\n        className=\"filename-modal\"\n        overlayClassName=\"filename-modal-overlay\"\n      >\n        <div className=\"filename-modal-content\">\n          <h2>Enter Filename</h2>\n          <div className=\"filename-input-container\">\n            <input\n              type=\"text\"\n              value={fileName}\n              onChange={(e) => setFileName(e.target.value)}\n              placeholder={`Enter filename`}\n            />\n            <span className=\"file-extension\">{`.${selectedFileFormat}`}</span>\n          </div>\n          <button onClick={handleFileNameSubmit}>Submit</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}