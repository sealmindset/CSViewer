{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/ColumnToggle.js\";\n// ColumnToggle.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnToggle = ({\n  headers,\n  renamedHeaders,\n  hiddenColumns,\n  onColumnToggle\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"toggle-columns-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: !hiddenColumns.includes(header),\n              onChange: () => onColumnToggle(header)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"field-name-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: renamedHeaders[header] || header,\n              onChange: e => onColumnToggle(renamedHeaders[header] || header, e.target.value),\n              maxLength: 100,\n              style: {\n                width: \"98%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)]\n        }, header, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ColumnToggle;\nexport default ColumnToggle;\nvar _c;\n$RefreshReg$(_c, \"ColumnToggle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ColumnToggle","headers","renamedHeaders","hiddenColumns","onColumnToggle","className","children","map","header","type","checked","includes","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","maxLength","style","width","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/ColumnToggle.js"],"sourcesContent":["// ColumnToggle.js\nimport React from \"react\";\n\nconst ColumnToggle = ({ headers, renamedHeaders, hiddenColumns, onColumnToggle }) => {\n  return (\n    <div className=\"toggle-table-container\">\n      <table className=\"toggle-columns-table\">\n        <tbody>\n          {headers.map((header) => (\n            <tr key={header}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={!hiddenColumns.includes(header)}\n                  onChange={() => onColumnToggle(header)}\n                />\n              </td>\n              <td className=\"field-name-cell\">\n                <input\n                  type=\"text\"\n                  value={renamedHeaders[header] || header}\n                  onChange={(e) =>\n                    onColumnToggle(renamedHeaders[header] || header, e.target.value)\n                  }\n                  maxLength={100}\n                  style={{ width: \"98%\" }}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ColumnToggle;\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC,aAAa;EAAEC;AAAe,CAAC,KAAK;EACnF,oBACEL,OAAA;IAAKM,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrCP,OAAA;MAAOM,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACrCP,OAAA;QAAAO,QAAA,EACGL,OAAO,CAACM,GAAG,CAAEC,MAAM,iBAClBT,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAAO,QAAA,eACEP,OAAA;cACEU,IAAI,EAAC,UAAU;cACfC,OAAO,EAAE,CAACP,aAAa,CAACQ,QAAQ,CAACH,MAAM,CAAE;cACzCI,QAAQ,EAAEA,CAAA,KAAMR,cAAc,CAACI,MAAM;YAAE;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLjB,OAAA;YAAIM,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC7BP,OAAA;cACEU,IAAI,EAAC,MAAM;cACXQ,KAAK,EAAEf,cAAc,CAACM,MAAM,CAAC,IAAIA,MAAO;cACxCI,QAAQ,EAAGM,CAAC,IACVd,cAAc,CAACF,cAAc,CAACM,MAAM,CAAC,IAAIA,MAAM,EAAEU,CAAC,CAACC,MAAM,CAACF,KAAK,CAChE;cACDG,SAAS,EAAE,GAAI;cACfC,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAM;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAlBER,MAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACO,EAAA,GA/BIvB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}