{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\nimport { flattenJSON, flattenProperties } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({}); // Define the missing state\n\n  useEffect(() => {\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n  useEffect(() => {\n    setGroupedData(groupAndSortTableData(data));\n  }, [data, headers, filterCriteria, searchTerms]);\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: handleParsedData\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        try {\n          const jsonData = JSON.parse(fileContent);\n          const flattenedData = flattenJSON(jsonData, renamedHeaders);\n          handleParsedData(flattenedData);\n        } catch (error) {\n          alert(\"Error parsing JSON file.\");\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, [renamedHeaders]);\n  const handleParsedData = parsedData => {\n    const dataColumns = Object.keys(parsedData[0] || {});\n    setHeaders(dataColumns);\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n    setGroupedData(parsedData);\n  };\n  const handleDownload = (format, fileName) => {\n    const visibleData = flattenJSON(groupedData, renamedHeaders);\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, {\n        header: true\n      });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n    const blob = new Blob([dataToExport], {\n      type: `text/${fileExtension};charset=utf-8;`\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => isChecked ? prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column) : [...prevHiddenColumns, column]);\n    setRenamedHeaders(prevRenamedHeaders => {\n      const updatedHeaders = {\n        ...prevRenamedHeaders\n      };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => ({\n      ...prevGroupByColumns,\n      [column]: isChecked\n    }));\n  };\n  const groupAndSortTableData = tableData => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n    const groups = {};\n    tableData.forEach(row => {\n      const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n    return Object.values(groups).flat().sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n  };\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const promptFileName = format => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CVS | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV|JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  } // Set the input width to 100%\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        const newColumn = renamedHeaders[header] || header;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [newColumn]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value.slice(-100) // Take the latter part of the value\n                        }));\n                      },\n\n                      list: `datalist-${header}`,\n                      maxLength: 98,\n                      size: 95 // Set the input size to 100\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 304,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: groupedData // Replace 'filteredData' with 'groupedData'\n          ,\n          pagination: true,\n          paginationPerPage: 10,\n          onRowClicked: handleRowClick,\n          noHeader: true,\n          customStyles: {\n            headCells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                fontWeight: \"bold\",\n                textAlign: \"left\"\n              }\n            },\n            cells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                textAlign: \"left\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen // Conditionally show/hide the modal based on isModalOpen state\n      ,\n      onRequestClose: () => setIsModalOpen(false) // Close the modal when requested\n      ,\n      contentLabel: \"Row Popup\",\n      className: \"row-popup-modal\",\n      overlayClassName: \"row-popup-modal-overlay\",\n      children: isModalOpen && /*#__PURE__*/_jsxDEV(RowPopup, {\n        headers: headers,\n        rowData: selectedRowData,\n        renamedHeaders: renamedHeaders,\n        hiddenColumns: hiddenColumns,\n        onClose: () => setIsModalOpen(false) // Close the modal when the Close button is clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"csv\"),\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => promptFileName(\"json\"),\n          children: \"Download JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      contentLabel: \"Enter Filename\",\n      className: \"filename-modal\",\n      overlayClassName: \"filename-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filename-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter Filename\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filename-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fileName,\n            onChange: e => setFileName(e.target.value),\n            placeholder: `Enter filename`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-extension\",\n            children: `.${selectedFileFormat}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileNameSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8ixn82PKSnRGw/vZ9MSgHqEC+dc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","flattenJSON","flattenProperties","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","groupedData","setGroupedData","renamedHeaders","setRenamedHeaders","groupByColumns","setGroupByColumns","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","groupAndSortTableData","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parse","skipEmptyLines","complete","handleParsedData","jsonData","JSON","flattenedData","error","alert","readAsText","parsedData","dataColumns","Object","keys","handleDownload","format","fileName","visibleData","dataToExport","fileExtension","unparse","stringify","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","handleRowClick","handleColumnToggle","column","isChecked","checked","prevHiddenColumns","hiddenColumn","prevRenamedHeaders","updatedHeaders","handleGroupByToggle","prevGroupByColumns","tableData","length","groups","groupKey","entries","selected","join","push","values","flat","sort","a","b","sortByColumn","find","sortBy","_","aValue","bValue","localeCompare","handleReset","initialState","isFileNameModalOpen","setIsFileNameModalOpen","selectedFileFormat","setSelectedFileFormat","setFileName","promptFileName","handleFileNameSubmit","trim","className","children","_jsxFileName","lineNumber","columnNumber","getRootProps","getInputProps","onChange","e","maxLength","width","_dropdownOptions$head","Fragment","placeholder","prevSearchTerms","slice","list","size","id","whiteSpace","overflow","textOverflow","onClick","columns","pagination","paginationPerPage","onRowClicked","noHeader","customStyles","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","textAlign","cells","isOpen","onRequestClose","contentLabel","overlayClassName","rowData","onClose","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\nimport { flattenJSON, flattenProperties } from \"./utils\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({}); // Define the missing state\n\n  useEffect(() => {\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  useEffect(() => {\n    setGroupedData(groupAndSortTableData(data));\n  }, [data, headers, filterCriteria, searchTerms]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: handleParsedData,\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        try {\n          const jsonData = JSON.parse(fileContent);\n          const flattenedData = flattenJSON(jsonData, renamedHeaders);\n          handleParsedData(flattenedData);\n        } catch (error) {\n          alert(\"Error parsing JSON file.\");\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, [renamedHeaders]);\n\n  const handleParsedData = (parsedData) => {\n    const dataColumns = Object.keys(parsedData[0] || {});\n    setHeaders(dataColumns);\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n    setGroupedData(parsedData);\n  };\n\n  const handleDownload = (format, fileName) => {\n    const visibleData = flattenJSON(groupedData, renamedHeaders);\n\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(visibleData, { header: true });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(visibleData, null, 2);\n      fileExtension = \"json\";\n    }\n\n    const blob = new Blob([dataToExport], { type: `text/${fileExtension};charset=utf-8;` });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) =>\n      isChecked ? prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column) : [...prevHiddenColumns, column]\n    );\n    setRenamedHeaders((prevRenamedHeaders) => {\n      const updatedHeaders = { ...prevRenamedHeaders };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => ({\n      ...prevGroupByColumns,\n      [column]: isChecked,\n    }));\n  };\n\n  const groupAndSortTableData = (tableData) => {\n    if (Object.keys(groupByColumns).length === 0) {\n      return tableData;\n    }\n\n    const groups = {};\n    tableData.forEach((row) => {\n      const groupKey = Object.entries(groupByColumns)\n        .map(([column, selected]) => (selected ? row[column] : \"\"))\n        .join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    return Object.values(groups).flat().sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy)) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    });\n  };\n\n\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const promptFileName = (format) => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CVS Table Display */}\n      <div className=\"section section1\">\n        <h1>CVS | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CVS File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV|JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }} // Set the input width to 100%\n                    />\n                  </td>\n                  <td>\n                    {/* Add \"Group By\" text next to the checkmark */}\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section filter-section\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Search ${renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            const newColumn = renamedHeaders[header] || header;\n                            setFilterCriteria((prevCriteria) => ({\n                              ...prevCriteria,\n                              [newColumn]: value,\n                            }));\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: value.slice(-100), // Take the latter part of the value\n                            }));\n                          }}\n                          list={`datalist-${header}`}\n                          maxLength={98}\n                          size={95} // Set the input size to 100\n                        />\n                        <datalist id={`datalist-${header}`}>\n                          <option value=\"All\" />\n                          {dropdownOptions[header]?.map((value) => (\n                            <option\n                              key={value}\n                              value={value}\n                              style={{\n                                width: \"100%\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                              }}\n                            >\n                              {value.length > 100 ? `...${value.slice(-100)}` : value}\n                            </option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n\n      {/* Section 5: Table */}\n      <div className=\"section section5\">\n        {/* ... (content for table section) */}\n        <div className=\"table-container\">\n          <DataTable\n            columns={columns}\n            data={groupedData} // Replace 'filteredData' with 'groupedData'\n            pagination\n            paginationPerPage={10}\n            onRowClicked={handleRowClick}\n            noHeader\n            customStyles={{\n              headCells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  fontWeight: \"bold\",\n                  textAlign: \"left\",\n                },\n              },\n              cells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  textAlign: \"left\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Modal for displaying the RowPopup */}\n      <Modal\n        isOpen={isModalOpen} // Conditionally show/hide the modal based on isModalOpen state\n        onRequestClose={() => setIsModalOpen(false)} // Close the modal when requested\n        contentLabel=\"Row Popup\"\n        className=\"row-popup-modal\"\n        overlayClassName=\"row-popup-modal-overlay\"\n      >\n        {isModalOpen && (\n          <RowPopup\n            headers={headers}\n            rowData={selectedRowData}\n            renamedHeaders={renamedHeaders}\n            hiddenColumns={hiddenColumns}\n            onClose={() => setIsModalOpen(false)} // Close the modal when the Close button is clicked\n          />\n        )}\n      </Modal>\n\n      {/* Section 6: Download Buttons for CSV and JSON */}\n      <div className=\"section section6\">\n        <div className=\"download-buttons\">\n          <button onClick={() => promptFileName(\"csv\")}>Download CSV</button>\n          <button onClick={() => promptFileName(\"json\")}>Download JSON</button>\n        </div>\n      </div>\n\n      {/* Modal for FileName */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        contentLabel=\"Enter Filename\"\n        className=\"filename-modal\"\n        overlayClassName=\"filename-modal-overlay\"\n      >\n        <div className=\"filename-modal-content\">\n          <h2>Enter Filename</h2>\n          <div className=\"filename-input-container\">\n            <input\n              type=\"text\"\n              value={fileName}\n              onChange={(e) => setFileName(e.target.value)}\n              placeholder={`Enter filename`}\n            />\n            <span className=\"file-extension\">{`.${selectedFileFormat}`}</span>\n          </div>\n          <button onClick={handleFileNameSubmit}>Submit</button>\n        </div>\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}