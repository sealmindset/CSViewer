{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: {\n        ...renamedHeaders\n      },\n      hiddenColumns: [...hiddenColumns],\n      filterCriteria: {\n        ...filterCriteria\n      },\n      searchTerms: {\n        ...searchTerms\n      }\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n  useEffect(() => {\n    if (!data || data.length === 0) {\n      // If data is not available or empty, do nothing\n      return;\n    }\n    const filteredData = data.filter(row => headers.every(header => {\n      const criteria = filterCriteria[header];\n      const searchTerm = searchTerms[header];\n      return (!criteria || criteria === \"All\" || row[header] === criteria) && (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()));\n    }));\n\n    // Apply group by and sort logic\n    const groupedAndSortedData = groupAndSortTableData(filteredData);\n    setGroupedData(groupedAndSortedData);\n  }, [data, headers, filterCriteria, searchTerms]);\n  const handleDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        try {\n          const parsedData = await Papa.parse(fileContent, {\n            header: true,\n            skipEmptyLines: true\n          });\n          const flattenedData = flattenCSVData(parsedData.data);\n          setData(flattenedData); // Set the flattened data\n          setHeaders(Object.keys(flattenedData[0])); // Update the headers accordingly\n          // ... (rest of the state updates)\n        } catch (error) {\n          alert(\"Error processing CSV data: \" + error.message);\n        }\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly as before\n        try {\n          const jsonData = JSON.parse(fileContent);\n          setData(jsonData);\n          setHeaders(Object.keys(jsonData[0]));\n          // ... (rest of the state updates)\n        } catch (error) {\n          alert(\"Error parsing JSON data: \" + error.message);\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, []);\n  const processCSVData = async data => {\n    if (Array.isArray(data)) {\n      // JSON data is already in the correct format\n      return {\n        data: flattenJSON(data),\n        headers: Object.keys(flattenJSON(data)[0])\n      };\n    } else {\n      // CSV data needs to be processed using PapaParse and then flattened\n      const parsedData = await Papa.parse(data, {\n        header: true,\n        skipEmptyLines: true\n      });\n      return {\n        data: flattenCSVData(parsedData.data),\n        headers: Object.keys(parsedData.data[0])\n      };\n    }\n  };\n  const flattenCSVData = data => {\n    const flattenValue = (value, prefix = \"\") => {\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested JSON object, recursively flatten it\n        return flattenJSON(value, prefix);\n      }\n      return value;\n    };\n    const flattenRow = row => {\n      let flattenedRow = {};\n      for (const [key, value] of Object.entries(row)) {\n        const flattenedValue = flattenValue(value, key + \"_\");\n        if (typeof flattenedValue === \"object\") {\n          // If the flattened value is an object, assign its properties to the flattenedRow\n          Object.assign(flattenedRow, flattenedValue);\n        } else {\n          // Otherwise, use the flattened value directly\n          flattenedRow[key] = flattenedValue;\n        }\n      }\n      return flattenedRow;\n    };\n    return data.map(row => flattenRow(row));\n  };\n\n  // Helper function to flatten JSON properties\n  const flattenJSON = (obj, prefix = \"\") => {\n    const flattenedObj = {};\n    for (const [key, value] of Object.entries(obj)) {\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested object, recursively flatten it\n        const nestedFlattenedObj = flattenJSON(value, prefix + key + \"_\");\n        Object.assign(flattenedObj, nestedFlattenedObj);\n      } else if (Array.isArray(value)) {\n        // If the value is an array, handle each element separately\n        value.forEach((element, index) => {\n          if (typeof element === \"object\" && element !== null) {\n            const nestedFlattenedObj = flattenJSON(element, `${prefix}${key}_${index}_`);\n            Object.assign(flattenedObj, nestedFlattenedObj);\n          } else {\n            flattenedObj[`${prefix}${key}_${index}`] = element;\n          }\n        });\n      } else {\n        flattenedObj[prefix + key] = value;\n      }\n    }\n    return flattenedObj;\n  };\n\n  // Function to group and sort table data\n  const groupAndSortTableData = tableData => {\n    if (!groupByColumns || Object.keys(groupByColumns).length === 0 || tableData.length === 0) {\n      return tableData;\n    }\n    const groups = {};\n    tableData.forEach(row => {\n      const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n\n    // Sort the data based on the groupBy column and any additional sorting criteria\n    const sortedGroups = Object.values(groups).map(group => group.sort((a, b) => {\n      const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n      if (sortByColumn) {\n        const [sortBy, _] = sortByColumn;\n        const aValue = a[sortBy];\n        const bValue = b[sortBy];\n        if (!hiddenColumns.includes(sortBy) && aValue !== undefined && bValue !== undefined) {\n          return aValue.localeCompare(bValue);\n        }\n      }\n      return 0;\n    }));\n\n    // Flatten the array of arrays into a single array of objects\n    return sortedGroups.flat();\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    // Allow both CSV and JSON files\n    multiple: false\n  });\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n  const columns = updatedHeaders.map(header => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: row => {\n      const value = row[header];\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested object (JSON), display it as a string\n        return JSON.stringify(value);\n      } else if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: header === groupByColumn || hiddenColumns.includes(header),\n    grow: 1\n  }));\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => {\n      if (isChecked) {\n        // If column is checked, remove it from hiddenColumns array\n        return prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column);\n      } else {\n        // If column is unchecked, add it to hiddenColumns array\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders(prevRenamedHeaders => {\n      const updatedHeaders = {\n        ...prevRenamedHeaders\n      };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => ({\n      ...prevGroupByColumns,\n      [column]: isChecked\n    }));\n  };\n\n  // Define missing functions\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const promptFileName = format => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n  const handleDownload = (format, fileName) => {\n    if (groupedData.length === 0) {\n      alert(\"No data to download.\");\n      return;\n    }\n    const flattenedData = groupedData.map(row => flattenJSON(row)); // Flatten each row\n\n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(flattenedData, {\n        header: true\n      });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(flattenedData, null, 2);\n      fileExtension = \"json\";\n    }\n    const blob = new Blob([dataToExport], {\n      type: `text/${fileExtension};charset=utf-8;`\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CVS | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV|JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  } // Set the input width to 100%\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Criteria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !!filterCriteria[header],\n                  onChange: () => setFilterCriteria(prevCriteria => ({\n                    ...prevCriteria,\n                    [header]: prevCriteria[header] ? \"\" : \"All\"\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: renamedHeaders[header] || header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: filterCriteria[header] || \"\",\n                  onChange: e => setFilterCriteria(prevCriteria => ({\n                    ...prevCriteria,\n                    [header]: e.target.value\n                  })),\n                  disabled: !filterCriteria[header]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: searchTerms[header] || \"\",\n                  onChange: e => setSearchTerms(prevSearchTerms => ({\n                    ...prevSearchTerms,\n                    [header]: e.target.value\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: groupedData,\n          pagination: true,\n          paginationPerPage: 10,\n          highlightOnHover: true,\n          pointerOnHover: true,\n          striped: true,\n          onRowClicked: handleRowClick,\n          fixedHeader: true,\n          fixedHeaderScrollHeight: \"600px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Row Details\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(RowPopup, {\n        rowData: selectedRowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-button\",\n        onClick: () => setIsModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section7\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => promptFileName(\"csv\"),\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: () => promptFileName(\"json\"),\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section8\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      contentLabel: \"Enter File Name\",\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter File Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fileName,\n          onChange: e => setFileName(e.target.value),\n          maxLength: 100,\n          style: {\n            width: \"98%\"\n          } // Set the input width to 100%\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close-button\",\n          onClick: handleFileNameSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7zhfsAeocTJ4yzoicH9uy8Bi1q8=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","initialState","setInitialState","groupByColumns","setGroupByColumns","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","groupedData","setGroupedData","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","length","filteredData","every","criteria","groupedAndSortedData","groupAndSortTableData","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parsedData","parse","skipEmptyLines","flattenedData","flattenCSVData","Object","keys","error","alert","message","jsonData","JSON","readAsText","processCSVData","isArray","flattenJSON","flattenValue","prefix","flattenRow","flattenedRow","key","entries","flattenedValue","assign","obj","flattenedObj","nestedFlattenedObj","element","index","tableData","groups","groupKey","column","selected","join","push","sortedGroups","values","group","sort","a","b","sortByColumn","find","sortBy","_","aValue","bValue","undefined","localeCompare","flat","getRootProps","getInputProps","onDrop","accept","multiple","groupByColumn","updatedHeaders","slice","columns","selector","sortable","wrap","format","stringify","substring","omit","grow","handleColumnToggle","isChecked","checked","prevHiddenColumns","hiddenColumn","prevRenamedHeaders","handleGroupByToggle","prevGroupByColumns","handleReset","isFileNameModalOpen","setIsFileNameModalOpen","selectedFileFormat","setSelectedFileFormat","fileName","setFileName","promptFileName","handleFileNameSubmit","trim","handleDownload","dataToExport","fileExtension","unparse","blob","Blob","type","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","onChange","e","maxLength","width","disabled","prevSearchTerms","pagination","paginationPerPage","highlightOnHover","pointerOnHover","striped","onRowClicked","handleRowClick","fixedHeader","fixedHeaderScrollHeight","isOpen","onRequestClose","contentLabel","overlayClassName","rowData","onClick","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  useEffect(() => {\n    setInitialState({\n      renamedHeaders: { ...renamedHeaders },\n      hiddenColumns: [...hiddenColumns],\n      filterCriteria: { ...filterCriteria },\n      searchTerms: { ...searchTerms },\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  useEffect(() => {\n    if (!data || data.length === 0) {\n      // If data is not available or empty, do nothing\n      return;\n    }\n  \n    const filteredData = data.filter((row) =>\n      headers.every((header) => {\n        const criteria = filterCriteria[header];\n        const searchTerm = searchTerms[header];\n        return (\n          (!criteria || criteria === \"All\" || row[header] === criteria) &&\n          (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()))\n        );\n      })\n    );\n  \n    // Apply group by and sort logic\n    const groupedAndSortedData = groupAndSortTableData(filteredData);\n    setGroupedData(groupedAndSortedData);\n  }, [data, headers, filterCriteria, searchTerms]);\n  \n\n  const handleDrop = useCallback(async (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n  \n    reader.onload = async (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        try {\n          const parsedData = await Papa.parse(fileContent, {\n            header: true,\n            skipEmptyLines: true,\n          });\n          const flattenedData = flattenCSVData(parsedData.data);\n          setData(flattenedData); // Set the flattened data\n          setHeaders(Object.keys(flattenedData[0])); // Update the headers accordingly\n          // ... (rest of the state updates)\n        } catch (error) {\n          alert(\"Error processing CSV data: \" + error.message);\n        }\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly as before\n        try {\n          const jsonData = JSON.parse(fileContent);\n          setData(jsonData);\n          setHeaders(Object.keys(jsonData[0]));\n          // ... (rest of the state updates)\n        } catch (error) {\n          alert(\"Error parsing JSON data: \" + error.message);\n        }\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n  \n    reader.readAsText(file);\n  }, []);\n  \n  \n\n  const processCSVData = async (data) => {\n    if (Array.isArray(data)) {\n      // JSON data is already in the correct format\n      return {\n        data: flattenJSON(data),\n        headers: Object.keys(flattenJSON(data)[0]),\n      };\n    } else {\n      // CSV data needs to be processed using PapaParse and then flattened\n      const parsedData = await Papa.parse(data, {\n        header: true,\n        skipEmptyLines: true,\n      });\n      return {\n        data: flattenCSVData(parsedData.data),\n        headers: Object.keys(parsedData.data[0]),\n      };\n    }\n  };\n  \n  const flattenCSVData = (data) => {\n    const flattenValue = (value, prefix = \"\") => {\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested JSON object, recursively flatten it\n        return flattenJSON(value, prefix);\n      }\n      return value;\n    };\n  \n    const flattenRow = (row) => {\n      let flattenedRow = {};\n      for (const [key, value] of Object.entries(row)) {\n        const flattenedValue = flattenValue(value, key + \"_\");\n        if (typeof flattenedValue === \"object\") {\n          // If the flattened value is an object, assign its properties to the flattenedRow\n          Object.assign(flattenedRow, flattenedValue);\n        } else {\n          // Otherwise, use the flattened value directly\n          flattenedRow[key] = flattenedValue;\n        }\n      }\n      return flattenedRow;\n    };\n  \n    return data.map((row) => flattenRow(row));\n  };\n  \n\n  // Helper function to flatten JSON properties\n const flattenJSON = (obj, prefix = \"\") => {\n    const flattenedObj = {};\n  \n    for (const [key, value] of Object.entries(obj)) {\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested object, recursively flatten it\n        const nestedFlattenedObj = flattenJSON(value, prefix + key + \"_\");\n        Object.assign(flattenedObj, nestedFlattenedObj);\n      } else if (Array.isArray(value)) {\n        // If the value is an array, handle each element separately\n        value.forEach((element, index) => {\n          if (typeof element === \"object\" && element !== null) {\n            const nestedFlattenedObj = flattenJSON(element, `${prefix}${key}_${index}_`);\n            Object.assign(flattenedObj, nestedFlattenedObj);\n          } else {\n            flattenedObj[`${prefix}${key}_${index}`] = element;\n          }\n        });\n      } else {\n        flattenedObj[prefix + key] = value;\n      }\n    }\n  \n    return flattenedObj;\n  };\n  \n  \n\n  // Function to group and sort table data\n  const groupAndSortTableData = (tableData) => {\n    if (!groupByColumns || Object.keys(groupByColumns).length === 0 || tableData.length === 0) {\n      return tableData;\n    }\n  \n    const groups = {};\n    tableData.forEach((row) => {\n      const groupKey = Object.entries(groupByColumns)\n        .map(([column, selected]) => (selected ? row[column] : \"\"))\n        .join(\"-\");\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey].push(row);\n    });\n  \n    // Sort the data based on the groupBy column and any additional sorting criteria\n    const sortedGroups = Object.values(groups).map((group) =>\n      group.sort((a, b) => {\n        const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n        if (sortByColumn) {\n          const [sortBy, _] = sortByColumn;\n          const aValue = a[sortBy];\n          const bValue = b[sortBy];\n          if (!hiddenColumns.includes(sortBy) && aValue !== undefined && bValue !== undefined) {\n            return aValue.localeCompare(bValue);\n          }\n        }\n        return 0;\n      })\n    );\n  \n    // Flatten the array of arrays into a single array of objects\n    return sortedGroups.flat();\n  };\n  \n  \n  \n  \n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\", // Allow both CSV and JSON files\n    multiple: false,\n  });\n\n  const groupByColumn = \"groupby\";\n  const updatedHeaders = [...headers.slice(0, 1), groupByColumn, ...headers.slice(1)];\n  \n  const columns = updatedHeaders.map((header) => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: (row) => {\n      const value = row[header];\n      if (typeof value === \"object\" && value !== null) {\n        // If the value is a nested object (JSON), display it as a string\n        return JSON.stringify(value);\n      } else if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: header === groupByColumn || hiddenColumns.includes(header),\n    grow: 1,\n  }));\n  \n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) => {\n      if (isChecked) {\n        // If column is checked, remove it from hiddenColumns array\n        return prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column);\n      } else {\n        // If column is unchecked, add it to hiddenColumns array\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders((prevRenamedHeaders) => {\n      const updatedHeaders = { ...prevRenamedHeaders };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => ({\n      ...prevGroupByColumns,\n      [column]: isChecked,\n    }));\n  };\n\n  // Define missing functions\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n    setGroupByColumns({});\n  };\n\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  const promptFileName = (format) => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() !== \"\") {\n      handleDownload(selectedFileFormat, fileName);\n    }\n  };\n\n  const handleDownload = (format, fileName) => {\n    if (groupedData.length === 0) {\n      alert(\"No data to download.\");\n      return;\n    }\n  \n    const flattenedData = groupedData.map((row) => flattenJSON(row)); // Flatten each row\n  \n    let dataToExport, fileExtension;\n    if (format === \"csv\") {\n      dataToExport = Papa.unparse(flattenedData, { header: true });\n      fileExtension = \"csv\";\n    } else if (format === \"json\") {\n      dataToExport = JSON.stringify(flattenedData, null, 2);\n      fileExtension = \"json\";\n    }\n  \n    const blob = new Blob([dataToExport], { type: `text/${fileExtension};charset=utf-8;` });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", `${fileName}.${fileExtension}`);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  \n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CVS Table Display */}\n      <div className=\"section section1\">\n        <h1>CVS | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CVS File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV|JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }} // Set the input width to 100%\n                    />\n                  </td>\n                  <td>\n                    {/* Add \"Group By\" text next to the checkmark */}\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section section4\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <thead>\n              <tr>\n                <th>Filter</th>\n                <th>Column</th>\n                <th>Criteria</th>\n                <th>Search</th>\n              </tr>\n            </thead>\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!!filterCriteria[header]}\n                      onChange={() =>\n                        setFilterCriteria((prevCriteria) => ({\n                          ...prevCriteria,\n                          [header]: prevCriteria[header] ? \"\" : \"All\",\n                        }))\n                      }\n                    />\n                  </td>\n                  <td>{renamedHeaders[header] || header}</td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      value={filterCriteria[header] || \"\"}\n                      onChange={(e) =>\n                        setFilterCriteria((prevCriteria) => ({\n                          ...prevCriteria,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      disabled={!filterCriteria[header]}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      value={searchTerms[header] || \"\"}\n                      onChange={(e) =>\n                        setSearchTerms((prevSearchTerms) => ({\n                          ...prevSearchTerms,\n                          [header]: e.target.value,\n                        }))\n                      }\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 5: CVS Data Display */}\n      <div className=\"section section5\">\n        <div className=\"data-table-container\">\n        <DataTable\n  columns={columns}\n  data={groupedData}\n  pagination={true}\n  paginationPerPage={10}\n  highlightOnHover={true}\n  pointerOnHover={true}\n  striped={true}\n  onRowClicked={handleRowClick}\n  fixedHeader={true}\n  fixedHeaderScrollHeight=\"600px\"\n/>\n        </div>\n      </div>\n\n      {/* Section 6: Modal */}\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Row Details\"\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        <RowPopup rowData={selectedRowData} />\n        <button className=\"modal-close-button\" onClick={() => setIsModalOpen(false)}>\n          Close\n        </button>\n      </Modal>\n\n      {/* Section 7: Download Buttons */}\n      <div className=\"section section7\">\n        <button className=\"download-button\" onClick={() => promptFileName(\"csv\")}>\n          Download CSV\n        </button>\n        <button className=\"download-button\" onClick={() => promptFileName(\"json\")}>\n          Download JSON\n        </button>\n      </div>\n\n      {/* Section 8: Reset Button */}\n      <div className=\"section section8\">\n        <button className=\"reset-button\" onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n\n      {/* Section 9: Modal for File Name */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        contentLabel=\"Enter File Name\"\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        <div>\n          <h2>Enter File Name</h2>\n          <input\n            type=\"text\"\n            value={fileName}\n            onChange={(e) => setFileName(e.target.value)}\n            maxLength={100}\n            style={{ width: \"98%\" }} // Set the input width to 100%\n          />\n          <button className=\"modal-close-button\" onClick={handleFileNameSubmit}>\n            Submit\n          </button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}