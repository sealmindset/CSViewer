{"ast":null,"code":"// utils.js\n\n// Flattens a nested JSON object into a single-level object with dot-separated keys\nexport function flattenJSON(jsonData) {\n  const result = {};\n  function recurse(curr, prop) {\n    if (typeof curr !== \"object\" || curr === null) {\n      result[prop] = curr;\n    } else if (Array.isArray(curr)) {\n      if (curr.length === 0) {\n        result[prop] = [];\n      } else {\n        for (let i = 0, len = curr.length; i < len; i++) {\n          recurse(curr[i], `${prop}[${i}]`);\n        }\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in curr) {\n        isEmpty = false;\n        if (curr.hasOwnProperty(p)) {\n          if (prop) {\n            recurse(curr[p], `${prop}.${p}`);\n          } else {\n            recurse(curr[p], p);\n          }\n        }\n      }\n      if (isEmpty && prop) {\n        result[prop] = {};\n      }\n    }\n  }\n  recurse(jsonData, \"\");\n  return result;\n}","map":{"version":3,"names":["flattenJSON","jsonData","result","recurse","curr","prop","Array","isArray","length","i","len","isEmpty","p","hasOwnProperty"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/utils.js"],"sourcesContent":["// utils.js\n\n// Flattens a nested JSON object into a single-level object with dot-separated keys\nexport function flattenJSON(jsonData) {\n  const result = {};\n\n  function recurse(curr, prop) {\n    if (typeof curr !== \"object\" || curr === null) {\n      result[prop] = curr;\n    } else if (Array.isArray(curr)) {\n      if (curr.length === 0) {\n        result[prop] = [];\n      } else {\n        for (let i = 0, len = curr.length; i < len; i++) {\n          recurse(curr[i], `${prop}[${i}]`);\n        }\n      }\n    } else {\n      let isEmpty = true;\n      for (const p in curr) {\n        isEmpty = false;\n        if (curr.hasOwnProperty(p)) {\n          if (prop) {\n            recurse(curr[p], `${prop}.${p}`);\n          } else {\n            recurse(curr[p], p);\n          }\n        }\n      }\n      if (isEmpty && prop) {\n        result[prop] = {};\n      }\n    }\n  }\n\n  recurse(jsonData, \"\");\n  return result;\n}\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,SAASA,WAAWA,CAACC,QAAQ,EAAE;EACpC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,SAASC,OAAOA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC3B,IAAI,OAAOD,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;MAC7CF,MAAM,CAACG,IAAI,CAAC,GAAGD,IAAI;IACrB,CAAC,MAAM,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;MAC9B,IAAIA,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;QACrBN,MAAM,CAACG,IAAI,CAAC,GAAG,EAAE;MACnB,CAAC,MAAM;QACL,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,IAAI,CAACI,MAAM,EAAEC,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;UAC/CN,OAAO,CAACC,IAAI,CAACK,CAAC,CAAC,EAAG,GAAEJ,IAAK,IAAGI,CAAE,GAAE,CAAC;QACnC;MACF;IACF,CAAC,MAAM;MACL,IAAIE,OAAO,GAAG,IAAI;MAClB,KAAK,MAAMC,CAAC,IAAIR,IAAI,EAAE;QACpBO,OAAO,GAAG,KAAK;QACf,IAAIP,IAAI,CAACS,cAAc,CAACD,CAAC,CAAC,EAAE;UAC1B,IAAIP,IAAI,EAAE;YACRF,OAAO,CAACC,IAAI,CAACQ,CAAC,CAAC,EAAG,GAAEP,IAAK,IAAGO,CAAE,EAAC,CAAC;UAClC,CAAC,MAAM;YACLT,OAAO,CAACC,IAAI,CAACQ,CAAC,CAAC,EAAEA,CAAC,CAAC;UACrB;QACF;MACF;MACA,IAAID,OAAO,IAAIN,IAAI,EAAE;QACnBH,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;MACnB;IACF;EACF;EAEAF,OAAO,CAACF,QAAQ,EAAE,EAAE,CAAC;EACrB,OAAOC,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}