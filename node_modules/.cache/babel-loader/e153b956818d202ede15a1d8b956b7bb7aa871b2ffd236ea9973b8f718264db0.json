{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n  useEffect(() => {\n    // Refresh filter criteria when renamedHeaders change\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      Object.entries(prevCriteria).forEach(([column, value]) => {\n        const newColumn = renamedHeaders[column] || column;\n        updatedCriteria[newColumn] = value;\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders]);\n  useEffect(() => {\n    // Update dropdown options when searchTerms change\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n  useEffect(() => {\n    // Save the initial state for reset\n    setInitialState({\n      renamedHeaders: {\n        ...renamedHeaders\n      },\n      hiddenColumns: [...hiddenColumns],\n      filterCriteria: {\n        ...filterCriteria\n      },\n      searchTerms: {\n        ...searchTerms\n      }\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  // Create a function to handle file drop using react-dropzone\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: result => {\n        setData(result.data);\n        setHeaders(result.meta.fields);\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n      }\n    });\n  }, []);\n\n  // Use react-dropzone hook\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv\",\n    multiple: false // Allow only single file drop\n  });\n\n  const handleRowClick = rowData => {\n    setSelectedRowData(rowData);\n    setIsModalOpen(true);\n  };\n  const columns = headers.map(header => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: row => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: hiddenColumns.includes(header),\n    grow: 1\n  }));\n  const filteredData = useMemo(() => {\n    if (Object.keys(filterCriteria).length === 0 && Object.keys(searchTerms).length === 0) return data;\n    return data.filter(row => headers.every(header => {\n      const criteria = filterCriteria[header];\n      const searchTerm = searchTerms[header];\n      return (!criteria || criteria === \"All\" || row[header] === criteria) && (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()));\n    }));\n  }, [data, headers, filterCriteria, searchTerms]);\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHidden => {\n      if (isChecked) {\n        return prevHidden.filter(col => col !== column);\n      } else {\n        return [...prevHidden, column];\n      }\n    });\n    // Update the renamedHeaders state with the edited field name\n    setRenamedHeaders(prevRenamedHeaders => {\n      const updatedHeaders = {\n        ...prevRenamedHeaders\n      };\n      if (!isChecked) {\n        // Reset field name to default when column is hidden\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  // eslint-disable-next-line\n  const handleFilterChange = useCallback((event, column) => {\n    const value = event.target.value;\n    const newColumn = renamedHeaders[column] || column;\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {\n        ...prevCriteria,\n        [newColumn]: value\n      };\n      if (dropdownOptions[column] && !dropdownOptions[column].includes(value)) {\n        const closestMatch = dropdownOptions[column].find(option => option.toLowerCase().startsWith(value.toLowerCase()));\n        if (closestMatch) {\n          updatedCriteria[newColumn] = closestMatch;\n        }\n      }\n      return updatedCriteria;\n    });\n    setSearchTerms(prevSearchTerms => ({\n      ...prevSearchTerms,\n      [column]: value\n    }));\n  }, [renamedHeaders, dropdownOptions]);\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n  };\n  const handleDownloadCSV = () => {\n    const visibleData = filteredData.map(row => headers.reduce((acc, header) => {\n      if (!hiddenColumns.includes(header)) {\n        const newColumn = renamedHeaders[header] || header;\n        acc[newColumn] = row[header];\n      }\n      return acc;\n    }, {}));\n    const csv = Papa.unparse(visibleData, {\n      header: true\n    });\n    const blob = new Blob([csv], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", \"filtered_data.csv\");\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  const handleDownloadJSON = () => {\n    const visibleData = filteredData.map(row => headers.reduce((acc, header) => {\n      if (!hiddenColumns.includes(header)) {\n        const newColumn = renamedHeaders[header] || header;\n        acc[newColumn] = row[header];\n      }\n      return acc;\n    }, {}));\n    const json = JSON.stringify(visibleData, null, 2);\n    const blob = new Blob([json], {\n      type: \"application/json;charset=utf-8;\"\n    });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", \"filtered_data.json\");\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CVS Table Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  } // Set the input width to 100%\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        const newColumn = renamedHeaders[header] || header;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [newColumn]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value.slice(-100) // Take the latter part of the value\n                        }));\n                      },\n\n                      list: `datalist-${header}`,\n                      maxLength: 98,\n                      size: 95 // Set the input size to 100\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 21\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 23\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 15\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 11\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: filteredData,\n          pagination: true,\n          paginationPerPage: 10,\n          onRowClicked: handleRowClick,\n          noHeader: false,\n          customStyles: {\n            headCells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                fontWeight: \"bold\",\n                textAlign: \"left\"\n              }\n            },\n            cells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                textAlign: \"left\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownloadCSV,\n          children: \"Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownloadJSON,\n          children: \"Download JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      contentLabel: \"Selected Row Data\",\n      children: /*#__PURE__*/_jsxDEV(RowPopup, {\n        headers: headers,\n        rowData: selectedRowData,\n        renamedHeaders: renamedHeaders,\n        hiddenColumns: hiddenColumns // Pass the hiddenColumns state as a prop\n        ,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zXNz0PpQfEoJA/jGaCIUBR3KmSA=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","useCallback","Papa","Modal","RowPopup","DataTable","useDropzone","jsxDEV","_jsxDEV","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","initialState","setInitialState","prevCriteria","updatedCriteria","Object","entries","forEach","column","value","newColumn","prevOptions","updatedOptions","header","includes","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","handleDrop","acceptedFiles","file","parse","skipEmptyLines","complete","result","meta","fields","getRootProps","getInputProps","onDrop","accept","multiple","handleRowClick","rowData","columns","name","selector","sortable","wrap","format","length","substring","omit","grow","filteredData","keys","every","criteria","handleColumnToggle","event","isChecked","target","checked","prevHidden","col","prevRenamedHeaders","updatedHeaders","handleFilterChange","closestMatch","find","option","startsWith","prevSearchTerms","handleReset","handleDownloadCSV","visibleData","reduce","acc","csv","unparse","blob","Blob","type","link","document","createElement","download","undefined","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","handleDownloadJSON","json","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","maxLength","width","_dropdownOptions$head","Fragment","placeholder","slice","list","size","id","whiteSpace","overflow","textOverflow","onClick","pagination","paginationPerPage","onRowClicked","noHeader","customStyles","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","textAlign","cells","isOpen","onRequestClose","contentLabel","onClose","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useMemo, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [initialState, setInitialState] = useState({});\n\n  useEffect(() => {\n    // Refresh filter criteria when renamedHeaders change\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      Object.entries(prevCriteria).forEach(([column, value]) => {\n        const newColumn = renamedHeaders[column] || column;\n        updatedCriteria[newColumn] = value;\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders]);\n\n  useEffect(() => {\n    // Update dropdown options when searchTerms change\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  useEffect(() => {\n    // Save the initial state for reset\n    setInitialState({\n      renamedHeaders: { ...renamedHeaders },\n      hiddenColumns: [...hiddenColumns],\n      filterCriteria: { ...filterCriteria },\n      searchTerms: { ...searchTerms },\n    });\n  }, [renamedHeaders, hiddenColumns, filterCriteria, searchTerms]);\n\n  // Create a function to handle file drop using react-dropzone\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (result) => {\n        setData(result.data);\n        setHeaders(result.meta.fields);\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n      },\n    });\n  }, []);\n\n  // Use react-dropzone hook\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv\",\n    multiple: false, // Allow only single file drop\n  });\n\n  const handleRowClick = (rowData) => {\n    setSelectedRowData(rowData);\n    setIsModalOpen(true);\n  };\n\n  const columns = headers.map((header) => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: (row) => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: hiddenColumns.includes(header),\n    grow: 1,\n  }));\n\n  const filteredData = useMemo(() => {\n    if (Object.keys(filterCriteria).length === 0 && Object.keys(searchTerms).length === 0)\n      return data;\n    return data.filter((row) =>\n      headers.every((header) => {\n        const criteria = filterCriteria[header];\n        const searchTerm = searchTerms[header];\n        return (\n          (!criteria || criteria === \"All\" || row[header] === criteria) &&\n          (!searchTerm || row[header].toLowerCase().includes(searchTerm.toLowerCase()))\n        );\n      })\n    );\n  }, [data, headers, filterCriteria, searchTerms]);\n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHidden) => {\n      if (isChecked) {\n        return prevHidden.filter((col) => col !== column);\n      } else {\n        return [...prevHidden, column];\n      }\n    });\n    // Update the renamedHeaders state with the edited field name\n    setRenamedHeaders((prevRenamedHeaders) => {\n      const updatedHeaders = { ...prevRenamedHeaders };\n      if (!isChecked) {\n        // Reset field name to default when column is hidden\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  // eslint-disable-next-line\n  const handleFilterChange = useCallback((event, column) => {\n    const value = event.target.value;\n    const newColumn = renamedHeaders[column] || column;\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = { ...prevCriteria, [newColumn]: value };\n      if (dropdownOptions[column] && !dropdownOptions[column].includes(value)) {\n        const closestMatch = dropdownOptions[column].find(\n          (option) => option.toLowerCase().startsWith(value.toLowerCase())\n        );\n        if (closestMatch) {\n          updatedCriteria[newColumn] = closestMatch;\n        }\n      }\n      return updatedCriteria;\n    });\n    setSearchTerms((prevSearchTerms) => ({\n      ...prevSearchTerms,\n      [column]: value,\n    }));\n  }, [renamedHeaders, dropdownOptions]);\n\n  const handleReset = () => {\n    setRenamedHeaders(initialState.renamedHeaders);\n    setHiddenColumns(initialState.hiddenColumns);\n    setFilterCriteria(initialState.filterCriteria);\n    setSearchTerms(initialState.searchTerms);\n  };\n\n  const handleDownloadCSV = () => {\n    const visibleData = filteredData.map((row) =>\n      headers.reduce((acc, header) => {\n        if (!hiddenColumns.includes(header)) {\n          const newColumn = renamedHeaders[header] || header;\n          acc[newColumn] = row[header];\n        }\n        return acc;\n      }, {})\n    );\n    const csv = Papa.unparse(visibleData, { header: true });\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", \"filtered_data.csv\");\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const handleDownloadJSON = () => {\n    const visibleData = filteredData.map((row) =>\n      headers.reduce((acc, header) => {\n        if (!hiddenColumns.includes(header)) {\n          const newColumn = renamedHeaders[header] || header;\n          acc[newColumn] = row[header];\n        }\n        return acc;\n      }, {})\n    );\n    const json = JSON.stringify(visibleData, null, 2);\n    const blob = new Blob([json], { type: \"application/json;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", \"filtered_data.json\");\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CVS Table Display */}\n      <div className=\"section section1\">\n        <h1>CVS Table Display</h1>\n      </div>\n\n      {/* Section 2: CVS File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }} // Set the input width to 100%\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n{/* Section 4: Filter Section */}\n<div className=\"section filter-section\">\n  <div className=\"filter-table-container\">\n    <table className=\"filter-table\">\n      <tbody>\n        {headers.map((header) => (\n          <React.Fragment key={header}>\n            {!hiddenColumns.includes(header) && (\n              <tr>\n                <td>\n                  <span>{renamedHeaders[header] || header}:</span>\n                </td>\n                <td className=\"field-name-cell\">\n                  <input\n                    type=\"text\"\n                    placeholder={`Search ${renamedHeaders[header] || header}`}\n                    value={searchTerms[header] || \"\"}\n                    onChange={(e) => {\n                      const value = e.target.value;\n                      const newColumn = renamedHeaders[header] || header;\n                      setFilterCriteria((prevCriteria) => ({\n                        ...prevCriteria,\n                        [newColumn]: value,\n                      }));\n                      setSearchTerms((prevSearchTerms) => ({\n                        ...prevSearchTerms,\n                        [header]: value.slice(-100), // Take the latter part of the value\n                      }));\n                    }}\n                    list={`datalist-${header}`}\n                    maxLength={98}\n                    size={95} // Set the input size to 100\n                  />\n                  <datalist id={`datalist-${header}`}>\n                    <option value=\"All\" />\n                    {dropdownOptions[header]?.map((value) => (\n                      <option\n                        key={value}\n                        value={value}\n                        style={{\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                        }}\n                      >\n                        {value.length > 100 ? `...${value.slice(-100)}` : value}\n                      </option>\n                    ))}\n                  </datalist>\n                </td>\n              </tr>\n            )}\n          </React.Fragment>\n        ))}\n      </tbody>\n    </table>\n  </div>\n  <button onClick={handleReset}>Reset</button>\n</div>\n\n\n      {/* Section 5: Table */}\n      <div className=\"section section5\">\n        <div className=\"table-container\">\n          <DataTable\n            columns={columns}\n            data={filteredData}\n            pagination\n            paginationPerPage={10}\n            onRowClicked={handleRowClick}\n            noHeader={false}\n            customStyles={{\n              headCells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  fontWeight: \"bold\",\n                  textAlign: \"left\",\n                },\n              },\n              cells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  textAlign: \"left\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Section 6: Download Buttons for CSV and JSON */}\n      <div className=\"section section6\">\n        <div className=\"download-buttons\">\n          <button onClick={handleDownloadCSV}>Download CSV</button>\n          <button onClick={handleDownloadJSON}>Download JSON</button>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel=\"Selected Row Data\"\n      >\n        <RowPopup\n          headers={headers}\n          rowData={selectedRowData}\n          renamedHeaders={renamedHeaders}\n          hiddenColumns={hiddenColumns} // Pass the hiddenColumns state as a prop\n          onClose={() => setIsModalOpen(false)}\n        />\n      </Modal>\n\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}