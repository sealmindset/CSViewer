{"ast":null,"code":"var _jsxFileName = \"/Users/robvance/Documents/GitHub/CSViewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenJSONColumns } from \"./utils\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria(prevCriteria => {\n      const updatedCriteria = {};\n      headers.forEach(header => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n  useEffect(() => {\n    setDropdownOptions(prevOptions => {\n      const updatedOptions = {\n        ...prevOptions\n      };\n      headers.forEach(header => {\n        if (!hiddenColumns.includes(header)) {\n          var _searchTerms$header;\n          const searchTerm = (_searchTerms$header = searchTerms[header]) === null || _searchTerms$header === void 0 ? void 0 : _searchTerms$header.toLowerCase();\n          const allValues = Array.from(new Set(data.map(row => row[header])));\n          const filteredValues = allValues.filter(value => !searchTerm || value.toLowerCase().includes(searchTerm));\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n  useEffect(() => {\n    setGroupedData(prevGroupedData => {\n      // Apply group by and sort logic\n      if (Object.keys(groupByColumns).length === 0) {\n        return data;\n      }\n      const groups = {};\n      data.forEach(row => {\n        const groupKey = Object.entries(groupByColumns).map(([column, selected]) => selected ? row[column] : \"\").join(\"-\");\n        if (!groups[groupKey]) {\n          groups[groupKey] = [];\n        }\n        groups[groupKey].push(row);\n      });\n      const groupedAndSortedData = Object.values(groups).flat().sort((a, b) => {\n        const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n        if (sortByColumn) {\n          const [sortBy, _] = sortByColumn;\n          const aValue = a[sortBy];\n          const bValue = b[sortBy];\n          if (!hiddenColumns.includes(sortBy)) {\n            return aValue.localeCompare(bValue);\n          }\n        }\n        return 0;\n      });\n      return groupedAndSortedData;\n    });\n  }, [data, headers, filterCriteria, searchTerms, groupByColumns, hiddenColumns]);\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse with special handling for JSON data in 'PROPERTIES' column\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: result => {\n            const flattenedData = flattenJSONColumns(result.data, [\"PROPERTIES\"]);\n            setData(flattenedData);\n            setHeaders(Object.keys(flattenedData[0]));\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          },\n          error: error => {\n            alert(\"Error parsing CSV file.\");\n            console.error(error);\n          }\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly\n        const jsonData = JSON.parse(fileContent);\n        setData(jsonData);\n        setHeaders(Object.keys(jsonData[0]));\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n    reader.readAsText(file);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    multiple: false\n  });\n  const handleReset = () => {\n    setData([]);\n    setHeaders([]);\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n  };\n  const promptFileName = format => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n  const updatedHeaders = [...headers];\n  const columns = updatedHeaders.map(header => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: row => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: hiddenColumns.includes(header),\n    grow: 1\n  }));\n  const handleRowClick = row => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns(prevHiddenColumns => {\n      if (isChecked) {\n        return prevHiddenColumns.filter(hiddenColumn => hiddenColumn !== column);\n      } else {\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders(prevRenamedHeaders => {\n      const updatedHeaders = {\n        ...prevRenamedHeaders\n      };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns(prevGroupByColumns => ({\n      ...prevGroupByColumns,\n      [column]: isChecked\n    }));\n  };\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() === \"\") {\n      alert(\"Please enter a valid filename.\");\n      return;\n    }\n    let outputData;\n    if (selectedFileFormat === \"csv\") {\n      outputData = Papa.unparse(data, {\n        columns: updatedHeaders,\n        header: true\n      });\n    } else if (selectedFileFormat === \"json\") {\n      outputData = JSON.stringify(data, null, 2);\n    } else {\n      alert(\"Unsupported file format.\");\n      return;\n    }\n    const blob = new Blob([outputData], {\n      type: `text/${selectedFileFormat}`\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `${fileName}.${selectedFileFormat}`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CSV | JSON Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload CSV or JSON Formatted File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ...getRootProps(),\n          className: \"dropzone\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag 'n' drop a CSV or JSON file here, or click to select a file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section toggle-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"toggle-columns-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: !hiddenColumns.includes(header),\n                  onChange: e => handleColumnToggle(e, header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"field-name-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: renamedHeaders[header] || header,\n                  onChange: e => setRenamedHeaders(prevRenamedHeaders => ({\n                    ...prevRenamedHeaders,\n                    [header]: e.target.value\n                  })),\n                  maxLength: 100,\n                  style: {\n                    width: \"98%\"\n                  } // Set the input width to 100%\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Group By:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: groupByColumns[header],\n                    onChange: e => handleGroupByToggle(e, header)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, header, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"filter-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: headers.map(header => {\n              var _dropdownOptions$head;\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: !hiddenColumns.includes(header) && /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [renamedHeaders[header] || header, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"field-name-cell\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: `Search ${renamedHeaders[header] || header}`,\n                      value: searchTerms[header] || \"\",\n                      onChange: e => {\n                        const value = e.target.value;\n                        const newColumn = renamedHeaders[header] || header;\n                        setFilterCriteria(prevCriteria => ({\n                          ...prevCriteria,\n                          [newColumn]: value\n                        }));\n                        setSearchTerms(prevSearchTerms => ({\n                          ...prevSearchTerms,\n                          [header]: value.slice(-100) // Take the latter part of the value\n                        }));\n                      },\n\n                      list: `datalist-${header}`,\n                      maxLength: 98,\n                      size: 95 // Set the input size to 100\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                      id: `datalist-${header}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 27\n                      }, this), (_dropdownOptions$head = dropdownOptions[header]) === null || _dropdownOptions$head === void 0 ? void 0 : _dropdownOptions$head.map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: value,\n                        style: {\n                          width: \"100%\",\n                          whiteSpace: \"nowrap\",\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\"\n                        },\n                        children: value.length > 100 ? `...${value.slice(-100)}` : value\n                      }, value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 29\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section section5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: groupedData // Replace 'filteredData' with 'groupedData'\n          ,\n          pagination: true,\n          paginationPerPage: 10,\n          onRowClicked: handleRowClick,\n          noHeader: true,\n          customStyles: {\n            headCells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                fontWeight: \"bold\",\n                textAlign: \"left\"\n              }\n            },\n            cells: {\n              style: {\n                paddingLeft: \"8px\",\n                paddingRight: \"8px\",\n                paddingTop: \"8px\",\n                paddingBottom: \"8px\",\n                textAlign: \"left\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(RowPopup, {\n        rowData: selectedRowData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFileNameModalOpen,\n      onRequestClose: () => setIsFileNameModalOpen(false),\n      style: {\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n        },\n        content: {\n          position: \"absolute\",\n          top: \"40%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"300px\",\n          textAlign: \"center\",\n          border: \"1px solid #ccc\",\n          background: \"#fff\",\n          boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\",\n          padding: \"20px\",\n          borderRadius: \"8px\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter File Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fileName,\n        onChange: e => setFileName(e.target.value),\n        style: {\n          marginBottom: \"10px\",\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileNameSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lax81oawUFbSK0f0MgkxIEOoZWY=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","DataTable","useDropzone","Modal","RowPopup","flattenJSONColumns","jsxDEV","_jsxDEV","setAppElement","App","_s","data","setData","headers","setHeaders","renamedHeaders","setRenamedHeaders","hiddenColumns","setHiddenColumns","filterCriteria","setFilterCriteria","searchTerms","setSearchTerms","dropdownOptions","setDropdownOptions","groupByColumns","setGroupByColumns","selectedRowData","setSelectedRowData","isModalOpen","setIsModalOpen","groupedData","setGroupedData","isFileNameModalOpen","setIsFileNameModalOpen","fileName","setFileName","selectedFileFormat","setSelectedFileFormat","prevCriteria","updatedCriteria","forEach","header","newColumn","includes","prevOptions","updatedOptions","_searchTerms$header","searchTerm","toLowerCase","allValues","Array","from","Set","map","row","filteredValues","filter","value","prevGroupedData","Object","keys","length","groups","groupKey","entries","column","selected","join","push","groupedAndSortedData","values","flat","sort","a","b","sortByColumn","find","sortBy","_","aValue","bValue","localeCompare","handleDrop","acceptedFiles","file","reader","FileReader","onload","event","fileContent","target","result","name","endsWith","parse","skipEmptyLines","complete","flattenedData","error","alert","console","jsonData","JSON","readAsText","getRootProps","getInputProps","onDrop","accept","multiple","handleReset","promptFileName","format","updatedHeaders","columns","selector","sortable","wrap","substring","omit","grow","handleRowClick","handleColumnToggle","isChecked","checked","prevHiddenColumns","hiddenColumn","prevRenamedHeaders","handleGroupByToggle","prevGroupByColumns","handleFileNameSubmit","trim","outputData","unparse","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","className","children","_jsxFileName","lineNumber","columnNumber","onChange","e","maxLength","style","width","_dropdownOptions$head","Fragment","placeholder","prevSearchTerms","slice","list","size","id","whiteSpace","overflow","textOverflow","onClick","pagination","paginationPerPage","onRowClicked","noHeader","customStyles","headCells","paddingLeft","paddingRight","paddingTop","paddingBottom","fontWeight","textAlign","cells","isOpen","onRequestClose","rowData","overlay","backgroundColor","content","position","top","left","transform","border","background","boxShadow","padding","borderRadius","marginBottom","_c","$RefreshReg$"],"sources":["/Users/robvance/Documents/GitHub/CSViewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport DataTable from \"react-data-table-component\";\nimport { useDropzone } from \"react-dropzone\";\nimport Modal from \"react-modal\";\nimport RowPopup from \"./RowPopup\";\nimport { flattenJSONColumns } from \"./utils\";\nimport \"./App.css\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [renamedHeaders, setRenamedHeaders] = useState({});\n  const [hiddenColumns, setHiddenColumns] = useState([]);\n  const [filterCriteria, setFilterCriteria] = useState({});\n  const [searchTerms, setSearchTerms] = useState({});\n  const [dropdownOptions, setDropdownOptions] = useState({});\n  const [groupByColumns, setGroupByColumns] = useState({});\n  const [selectedRowData, setSelectedRowData] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [groupedData, setGroupedData] = useState([]);\n  const [isFileNameModalOpen, setIsFileNameModalOpen] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n  const [selectedFileFormat, setSelectedFileFormat] = useState(\"\");\n\n  useEffect(() => {\n    // Update filter criteria with renamed headers and handle hiddenColumns as an array\n    setFilterCriteria((prevCriteria) => {\n      const updatedCriteria = {};\n      headers.forEach((header) => {\n        const newColumn = renamedHeaders[header] || header;\n        if (!hiddenColumns.includes(newColumn)) {\n          updatedCriteria[newColumn] = prevCriteria[header];\n        }\n      });\n      return updatedCriteria;\n    });\n  }, [renamedHeaders, hiddenColumns, headers, filterCriteria]);\n\n  useEffect(() => {\n    setDropdownOptions((prevOptions) => {\n      const updatedOptions = { ...prevOptions };\n      headers.forEach((header) => {\n        if (!hiddenColumns.includes(header)) {\n          const searchTerm = searchTerms[header]?.toLowerCase();\n          const allValues = Array.from(new Set(data.map((row) => row[header])));\n          const filteredValues = allValues.filter(\n            (value) => !searchTerm || value.toLowerCase().includes(searchTerm)\n          );\n          updatedOptions[header] = filteredValues;\n        }\n      });\n      return updatedOptions;\n    });\n  }, [searchTerms, data, headers, hiddenColumns]);\n\n  useEffect(() => {\n    setGroupedData((prevGroupedData) => {\n      // Apply group by and sort logic\n      if (Object.keys(groupByColumns).length === 0) {\n        return data;\n      }\n\n      const groups = {};\n      data.forEach((row) => {\n        const groupKey = Object.entries(groupByColumns)\n          .map(([column, selected]) => (selected ? row[column] : \"\"))\n          .join(\"-\");\n        if (!groups[groupKey]) {\n          groups[groupKey] = [];\n        }\n        groups[groupKey].push(row);\n      });\n\n      const groupedAndSortedData = Object.values(groups).flat().sort((a, b) => {\n        const sortByColumn = Object.entries(groupByColumns).find(([column, selected]) => selected);\n        if (sortByColumn) {\n          const [sortBy, _] = sortByColumn;\n          const aValue = a[sortBy];\n          const bValue = b[sortBy];\n          if (!hiddenColumns.includes(sortBy)) {\n            return aValue.localeCompare(bValue);\n          }\n        }\n        return 0;\n      });\n\n      return groupedAndSortedData;\n    });\n  }, [data, headers, filterCriteria, searchTerms, groupByColumns, hiddenColumns]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const fileContent = event.target.result;\n      if (file.name.endsWith(\".csv\")) {\n        // Handle CSV data using Papa.parse with special handling for JSON data in 'PROPERTIES' column\n        Papa.parse(fileContent, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (result) => {\n            const flattenedData = flattenJSONColumns(result.data, [\"PROPERTIES\"]);\n            setData(flattenedData);\n            setHeaders(Object.keys(flattenedData[0]));\n            setRenamedHeaders({});\n            setHiddenColumns([]);\n            setFilterCriteria({});\n            setSearchTerms({});\n            setDropdownOptions({});\n            setGroupByColumns({});\n          },\n          error: (error) => {\n            alert(\"Error parsing CSV file.\");\n            console.error(error);\n          },\n        });\n      } else if (file.name.endsWith(\".json\")) {\n        // Handle JSON data directly\n        const jsonData = JSON.parse(fileContent);\n        setData(jsonData);\n        setHeaders(Object.keys(jsonData[0]));\n        setRenamedHeaders({});\n        setHiddenColumns([]);\n        setFilterCriteria({});\n        setSearchTerms({});\n        setDropdownOptions({});\n        setGroupByColumns({});\n      } else {\n        alert(\"Unsupported file format. Please upload either CSV or JSON file.\");\n      }\n    };\n\n    reader.readAsText(file);\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n    accept: \".csv, .json\",\n    multiple: false,\n  });\n\n  const handleReset = () => {\n    setData([]);\n    setHeaders([]);\n    setRenamedHeaders({});\n    setHiddenColumns([]);\n    setFilterCriteria({});\n    setSearchTerms({});\n    setDropdownOptions({});\n    setGroupByColumns({});\n  };\n\n  const promptFileName = (format) => {\n    setSelectedFileFormat(format);\n    setIsFileNameModalOpen(true);\n  };\n\n  const updatedHeaders = [...headers];\n\n  const columns = updatedHeaders.map((header) => ({\n    name: renamedHeaders[header] || header,\n    selector: header,\n    sortable: true,\n    wrap: true,\n    format: (row) => {\n      const value = row[header];\n      if (value && value.length > 100) {\n        return value.substring(0, 100) + \"...\";\n      }\n      return value;\n    },\n    omit: hiddenColumns.includes(header),\n    grow: 1,\n  }));\n\n  const handleRowClick = (row) => {\n    setSelectedRowData(row);\n    setIsModalOpen(true);\n  };\n\n  const handleColumnToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setHiddenColumns((prevHiddenColumns) => {\n      if (isChecked) {\n        return prevHiddenColumns.filter((hiddenColumn) => hiddenColumn !== column);\n      } else {\n        return [...prevHiddenColumns, column];\n      }\n    });\n    setRenamedHeaders((prevRenamedHeaders) => {\n      const updatedHeaders = { ...prevRenamedHeaders };\n      if (!isChecked) {\n        delete updatedHeaders[column];\n      }\n      return updatedHeaders;\n    });\n  };\n\n  const handleGroupByToggle = (event, column) => {\n    const isChecked = event.target.checked;\n    setGroupByColumns((prevGroupByColumns) => ({\n      ...prevGroupByColumns,\n      [column]: isChecked,\n    }));\n  };\n\n  const handleFileNameSubmit = () => {\n    setIsFileNameModalOpen(false);\n    if (fileName.trim() === \"\") {\n      alert(\"Please enter a valid filename.\");\n      return;\n    }\n\n    let outputData;\n    if (selectedFileFormat === \"csv\") {\n      outputData = Papa.unparse(data, {\n        columns: updatedHeaders,\n        header: true,\n      });\n    } else if (selectedFileFormat === \"json\") {\n      outputData = JSON.stringify(data, null, 2);\n    } else {\n      alert(\"Unsupported file format.\");\n      return;\n    }\n\n    const blob = new Blob([outputData], { type: `text/${selectedFileFormat}` });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = `${fileName}.${selectedFileFormat}`;\n    link.click();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Section 1: Header or Title - CSV Table Display */}\n      <div className=\"section section1\">\n        <h1>CSV | JSON Viewer</h1>\n      </div>\n\n      {/* Section 2: CSV File Input */}\n      <div className=\"section section2\">\n        <div className=\"upload-container\">\n          <h2>Upload CSV or JSON Formatted File</h2>\n          <div {...getRootProps()} className=\"dropzone\">\n            <input {...getInputProps()} />\n            <p>Drag 'n' drop a CSV or JSON file here, or click to select a file</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Section 3: Toggle Section */}\n      <div className=\"section toggle-section\">\n        <div className=\"toggle-table-container\">\n          <table className=\"toggle-columns-table\">\n            <tbody>\n              {headers.map((header) => (\n                <tr key={header}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      checked={!hiddenColumns.includes(header)}\n                      onChange={(e) => handleColumnToggle(e, header)}\n                    />\n                  </td>\n                  <td className=\"field-name-cell\">\n                    <input\n                      type=\"text\"\n                      value={renamedHeaders[header] || header}\n                      onChange={(e) =>\n                        setRenamedHeaders((prevRenamedHeaders) => ({\n                          ...prevRenamedHeaders,\n                          [header]: e.target.value,\n                        }))\n                      }\n                      maxLength={100}\n                      style={{ width: \"98%\" }} // Set the input width to 100%\n                    />\n                  </td>\n                  <td>\n                    {/* Add \"Group By\" text next to the checkmark */}\n                    <label>\n                      Group By:\n                      <input\n                        type=\"checkbox\"\n                        checked={groupByColumns[header]}\n                        onChange={(e) => handleGroupByToggle(e, header)}\n                      />\n                    </label>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Section 4: Filter Section */}\n      <div className=\"section filter-section\">\n        <div className=\"filter-table-container\">\n          <table className=\"filter-table\">\n            <tbody>\n              {headers.map((header) => (\n                <React.Fragment key={header}>\n                  {!hiddenColumns.includes(header) && (\n                    <tr>\n                      <td>\n                        <span>{renamedHeaders[header] || header}:</span>\n                      </td>\n                      <td className=\"field-name-cell\">\n                        <input\n                          type=\"text\"\n                          placeholder={`Search ${renamedHeaders[header] || header}`}\n                          value={searchTerms[header] || \"\"}\n                          onChange={(e) => {\n                            const value = e.target.value;\n                            const newColumn = renamedHeaders[header] || header;\n                            setFilterCriteria((prevCriteria) => ({\n                              ...prevCriteria,\n                              [newColumn]: value,\n                            }));\n                            setSearchTerms((prevSearchTerms) => ({\n                              ...prevSearchTerms,\n                              [header]: value.slice(-100), // Take the latter part of the value\n                            }));\n                          }}\n                          list={`datalist-${header}`}\n                          maxLength={98}\n                          size={95} // Set the input size to 100\n                        />\n                        <datalist id={`datalist-${header}`}>\n                          <option value=\"All\" />\n                          {dropdownOptions[header]?.map((value) => (\n                            <option\n                              key={value}\n                              value={value}\n                              style={{\n                                width: \"100%\",\n                                whiteSpace: \"nowrap\",\n                                overflow: \"hidden\",\n                                textOverflow: \"ellipsis\",\n                              }}\n                            >\n                              {value.length > 100 ? `...${value.slice(-100)}` : value}\n                            </option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  )}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n\n      {/* Section 5: Table */}\n      <div className=\"section section5\">\n        <div className=\"table-container\">\n          <DataTable\n            columns={columns}\n            data={groupedData} // Replace 'filteredData' with 'groupedData'\n            pagination\n            paginationPerPage={10}\n            onRowClicked={handleRowClick}\n            noHeader\n            customStyles={{\n              headCells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  fontWeight: \"bold\",\n                  textAlign: \"left\",\n                },\n              },\n              cells: {\n                style: {\n                  paddingLeft: \"8px\",\n                  paddingRight: \"8px\",\n                  paddingTop: \"8px\",\n                  paddingBottom: \"8px\",\n                  textAlign: \"left\",\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n\n      {/* Modal for displaying the RowPopup */}\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\n        <RowPopup rowData={selectedRowData} />\n      </Modal>\n\n      {/* Modal for entering the file name */}\n      <Modal\n        isOpen={isFileNameModalOpen}\n        onRequestClose={() => setIsFileNameModalOpen(false)}\n        style={{\n          overlay: {\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n          },\n          content: {\n            position: \"absolute\",\n            top: \"40%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"300px\",\n            textAlign: \"center\",\n            border: \"1px solid #ccc\",\n            background: \"#fff\",\n            boxShadow: \"0 0 10px rgba(0, 0, 0, 0.2)\",\n            padding: \"20px\",\n            borderRadius: \"8px\",\n          },\n        }}\n      >\n        <h2>Enter File Name</h2>\n        <input\n          type=\"text\"\n          value={fileName}\n          onChange={(e) => setFileName(e.target.value)}\n          style={{ marginBottom: \"10px\", width: \"100%\" }}\n        />\n        <button onClick={handleFileNameSubmit}>Submit</button>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}